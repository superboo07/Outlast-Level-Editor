/*******************************************************************************
 * OLSoundEnvironmentManager generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OLSoundEnvironmentManager extends Object
    native
    config(Game);

struct native VirtualizationNode
{
    var export editinline transient OLSoundConnectorComponent Connector;
    var float VirtualizableDistance;
    var float DistToListener;
    var int Level;

    structdefaultproperties
    {
        Connector=none
        VirtualizableDistance=0.0
        DistToListener=0.0
        Level=0
    }
};

struct native MultiPositionGroup
{
    var init string EventName;
    var init native array<init OLSoundEmitter> Members;

    structdefaultproperties
    {
        EventName=""
    }
};

var private native const noexport Pointer VfTable_FTickableObject;
var transient array<OLSoundEnvironmentVolume> ListenerVolumes;
var transient array<OLSoundEnvironmentVolume> AllVolumes;
var bool bEnvironmentsDirty;
var bool bPendingDestroy;
var config bool bEnableSoundVirtualization;
var array<OLSoundEmitter> ActiveSources;
var array<MultiPositionGroup> ActiveGroups;
var OLSoundEnvironment DefaultSoundEnvironment;
var const name FadeRTPC;
var config float OcclusionApproachCoeff;
var config float ObstructionApproachCoeff;
var config float ObstructionRatioInSameVolume;
var config float MaxPathingDist;
var config float FreePathingDist;
var config float LockerOcclusion;
var config string LockerReverbEnvironment;

// Export UOLSoundEnvironmentManager::execCleanup(FFrame&, void* const)
native function Cleanup();

// Export UOLSoundEnvironmentManager::execExitAllTouchingVolumes(FFrame&, void* const)
native function ExitAllTouchingVolumes();

// Export UOLSoundEnvironmentManager::execGetSoundEnvManager(FFrame&, void* const)
native static function OLSoundEnvironmentManager GetSoundEnvManager();

defaultproperties
{
    bEnableSoundVirtualization=true
    DefaultSoundEnvironment=OLSoundEnvironment'Reverb.Default_SoundEnvironment'
    FadeRTPC=RTPC_FadeToBlack
    OcclusionApproachCoeff=0.990
    ObstructionApproachCoeff=0.950
    ObstructionRatioInSameVolume=0.50
    MaxPathingDist=1200.0
    FreePathingDist=500.0
    LockerOcclusion=0.20
    LockerReverbEnvironment="Locker_Space"
}