/*******************************************************************************
 * OLNavigationHandle generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OLNavigationHandle extends NavigationHandle within Actor
    native(AI);

struct native MovePoint
{
    var Vector Destination;
    var native array<Pointer> RelevantEdges;

    structdefaultproperties
    {
        Destination=(X=0.0,Y=0.0,Z=0.0)
    }
};

var array<MovePoint> MovePoints;
var int LastMovePointIdxForPath;
var() bool bDebugMovePoints;

// Export UOLNavigationHandle::execFindPath(FFrame&, void* const)
native function bool FindPath(optional out Actor out_DestActor, optional out int out_DestItem);

// Export UOLNavigationHandle::execGetNextMoveLocation(FFrame&, void* const)
native function bool GetNextMoveLocation(out Vector out_MoveDest, float ArrivalDistance);

// Export UOLNavigationHandle::execGetNextMovePath(FFrame&, void* const)
native function bool GetNextMovePath(out array<Vector> out_MovePath, float ArrivalDistance);

// Export UOLNavigationHandle::execPopMoveLocation(FFrame&, void* const)
native function PopMoveLocation();

// Export UOLNavigationHandle::execClearPath(FFrame&, void* const)
native function ClearPath();

// Export UOLNavigationHandle::execTrimPathToLastDoor(FFrame&, void* const)
native function bool TrimPathToLastDoor(out Vector out_NewDestination);

// Export UOLNavigationHandle::execTrimPathByDistance(FFrame&, void* const)
native function bool TrimPathByDistance(float DistanceToTrim, out Vector out_NewDestination, optional bool bStopAtMeshObject);

// Export UOLNavigationHandle::execPointReachable(FFrame&, void* const)
native function bool PointReachable(Vector Point, optional Vector OverrideStartPoint, optional bool bAllowHitsInEndCollisionBox)
{                  
}