/*******************************************************************************
 * OLUIFrontEnd generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2021 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OLUIFrontEnd extends OLGFxMoviePlayer
    dependson(OLHud)
    config(UI);

struct ViewInfo
{
    var name ViewName;
    var string SWFName;
    var array<name> DependantViews;

    structdefaultproperties
    {
        // Object Offset:0x0021305A
        ViewName=None
        SWFName=""
        DependantViews=none
    }
};

var name EscapeMenuKey;
var name TabMenuKey;
var name RecordingMenuKey;
var name EvidenceMenuKey;
var GFxObject RootMC;
var GFxObject ManagerMC;
var bool bInitialized;
var bool bCapturingKeyBinding;
var EMenuType MenuType;
var OLUIFrontEnd_MainMenu MainMenuView;
var OLUIFrontEnd_PauseMenu PauseMenuView;
var OLUIFrontEnd_LoadGame LoadGameView;
var OLUIFrontEnd_Options OptionsView;
var OLUIFrontEnd_Screen GammaScreenView;
var OLUIFrontEnd_Screen GamepadScreenView;
var OLUIFrontEnd_Credits CreditsView;
var OLUIFrontEnd_DifficultySelectionScreen DifficultySelectionView;
var OLUIFrontEnd_ChapterSelection ChapterSelection;
var OLUIFrontEnd_TabMenu TabMenuView;
var OLUIFrontEnd_RecordingList RecordingListView;
var OLUIFrontEnd_Screen RecordingView;
var OLUIFrontEnd_EvidenceList EvidenceListView;
var OLUIFrontEnd_Screen EvidenceView;
var config array<config ViewInfo> ViewData;
var array<OLUIFrontEnd_View> ViewStack;
var array<name> LoadedViews;

function bool Start(optional bool StartPaused)
{
}

event OnClose()
{
}

function AddCaptureKeys()
{
}

function OnKeyBindingsChanged()
{
}

final function ConfigFrontEnd()
{
}

final function LoadViews()
{
}

final function LoadView(ViewInfo InViewInfo)
{
}

function PushView(coerce OLUIFrontEnd_View targetView)
{
}

function PushViewByName(name TargetViewName, optional OLUIFrontEnd_Screen ParentView)
{
    switch(TargetViewName)
    {
        case 'Options':
            ConfigureTargetView(OptionsView);
            break;
        case 'GammaScreen':
            ConfigureTargetView(GammaScreenView);
            break;
        case 'GamepadScreen':
            ConfigureTargetView(GamepadScreenView);
            break;
        case 'LoadGame':
            ConfigureTargetView(LoadGameView);
            break;
        case 'RecordingList':
            ConfigureTargetView(RecordingListView);
            break;
        case 'RecordingView':
            ConfigureTargetView(RecordingView);
            break;
        case 'EvidenceList':
            ConfigureTargetView(EvidenceListView);
            break;
        case 'EvidenceView':
            ConfigureTargetView(EvidenceView);
            break;
        case 'Credits':
            ConfigureTargetView(CreditsView);
            break;
        case 'DifficultySelectionScreen':
            ConfigureTargetView(DifficultySelectionView);
            break;
        case 'ChapterSelection':
            ConfigureTargetView(ChapterSelection);
            break;
        default:
            break;
    }
}

function GFxObject PopView()
{
}

final function GFxObject PopViewStub()
{
}

final function ConfigureView(OLUIFrontEnd_View InView, name WidgetName, name WidgetPath)
{
}

function ConfigureTargetView(OLUIFrontEnd_View targetView)
{
}

event bool WidgetInitialized(name WidgetName, name WidgetPath, GFxObject Widget)
{
}

event bool FilterButtonInput(int ControllerId, name ButtonName, Object.EInputEvent InputEvent)
{
}

function StartKeyBindingCapture()
{
}

function string GetFriendlyKeyBindingName(string KeyName)
{
}

function bool HasInitializedGamma()
{
}

function string GetGamepadActionBoundToKey(string KeyNameString, int ConfigType)
{
}

function string GetLocalizedString(string Category, string KeyName, string File)
{
}

defaultproperties
{
    // Object Offset:0x00214820
    ViewData(0)=(ViewName=MainMenu,SWFName="Main_Menu.swf",DependantViews=(Options,LoadGame,Credits))
    ViewData(1)=(ViewName=LoadGame,SWFName="LoadGame.swf",DependantViews=none)
    ViewData(2)=(ViewName=Options,SWFName="Options.swf",DependantViews=(GammaScreen,GamepadScreen))
    ViewData(3)=(ViewName=GammaScreen,SWFName="GammaScreen.swf",DependantViews=none)
    ViewData(4)=(ViewName=GamepadScreen,SWFName="GamepadScreen.swf",DependantViews=none)
    ViewData(5)=(ViewName=DifficultySelectionScreen,SWFName="DifficultySelectionScreen.swf",DependantViews=none)
    ViewData(6)=(ViewName=ChapterSelection,SWFName="ChapterList.swf",DependantViews=none)
    ViewData(7)=(ViewName=PauseMenu,SWFName="PauseMenu.swf",DependantViews=(Options))
    ViewData(8)=(ViewName=Credits,SWFName="EndCredit.swf",DependantViews=none)
    ViewData(9)=(ViewName=TabMenu,SWFName="TabMenu.swf",DependantViews=(RecordingList,EvidenceList))
    ViewData(10)=(ViewName=RecordingList,SWFName="RecordingList.swf",DependantViews=(RecordingView))
    ViewData(11)=(ViewName=RecordingView,SWFName="RecordingView.swf",DependantViews=none)
    ViewData(12)=(ViewName=EvidenceList,SWFName="EvidenceList.swf",DependantViews=(EvidenceView))
    ViewData(13)=(ViewName=EvidenceView,SWFName="EvidenceView.swf",DependantViews=none)
    MovieInfo=SwfMovie'OLFrontEnd.Manager'
    bCaptureInput=true
    SoundThemes=/* Array type was not detected. */
    TimingMode=GFxTimingMode.TM_Real
    Priority=4
    WidgetBindings=/* Array type was not detected. */
}