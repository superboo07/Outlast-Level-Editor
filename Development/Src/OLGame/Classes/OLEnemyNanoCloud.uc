/*******************************************************************************
 * OLEnemyNanoCloud generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2021 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OLEnemyNanoCloud extends OLEnemyPawn
    native(AI)
    config(Enemy)
    hidecategories(Navigation);

enum NanoCloudForm
{
    NCF_Swarm,
    NCF_Human,
    NCF_MorphingToSwarm,
    NCF_MorphingToHuman,
    NCF_MAX
};

enum MorphingValueType
{
    MVT_CloudEmitter,
    MVT_SmallEmitters,
    MVT_SwarmMaterial,
    MVT_SkeletonMaterial,
    MVT_EyesMaterial,
    MVT_MAX
};

struct native MorphingTransition
{
    var float PreValue;
    var float PostValue;
    var const float StartTime;
    var const float EndTime;

    structdefaultproperties
    {
        // Object Offset:0x001CBEEE
        PreValue=0.0
        PostValue=0.0
        StartTime=0.0
        EndTime=0.0
    }
};

var export editinline ParticleSystemComponent CloudEmitter;
var MaterialInstanceConstant MatInstSwarm;
var MaterialInstanceConstant MatInstSkeleton;
var MaterialInstanceConstant MatInstEyes;
var export editinline StaticMeshComponent SphereMesh;
var TextureMovie SwarmMindMovie;
var MaterialInstanceConstant MatBloodyMain;
var Material MatBloodySecondary;
var OLEnemyNanoCloud.NanoCloudForm CurrentForm;
var float MorphStartedTime;
var array<float> MorphValues;
var array<MorphingTransition> HumanMorphs;
var array<MorphingTransition> SwarmMorphs;
var float AlwaysVisibleRange;
var float DistanceBasedVisibilityMorphTimeScale;
var float MorphMultiplier;
var bool bAlwaysVisible;
var float AlwaysVisibleChangeTime;
var float FullOpacityDistance;
var float CurrentOpacity;
var const float DefaultMorphMultiplier;
var const float ChaseMorphMultiplier;
var const float HumanMorphDuration;
var const float SwarmMorphDuration;
var const float HumanMorphPhase1Time;
var const float SwarmMorphPhase1Time;
var float TimeSinceLastChange;
var float TimeForNextChange;
var const float PatrolChangeMin;
var const float PatrolChangeMax;
var const name CloudEmitterAttachBoneName;
var const name NanoSphereAttachBoneName;

// Export UOLEnemyNanoCloud::execNativePostBeginPlay(FFrame&, void* const)
native function NativePostBeginPlay();

// Export UOLEnemyNanoCloud::execMorphToSwarm(FFrame&, void* const)
native function MorphToSwarm(optional float TimeScale)
{
}

// Export UOLEnemyNanoCloud::execMorphToHuman(FFrame&, void* const)
native function MorphToHuman(optional float TimeScale)
{
}

// Export UOLEnemyNanoCloud::execSetSwarmForm(FFrame&, void* const)
native function SetSwarmForm();

// Export UOLEnemyNanoCloud::execSetHumanForm(FFrame&, void* const)
native function SetHumanForm();

// Export UOLEnemyNanoCloud::execSwitchToBloodyMaterialNotify(FFrame&, void* const)
native function SwitchToBloodyMaterialNotify();

simulated event PostBeginPlay()
{
    super.PostBeginPlay();
    SetHumanForm();
}

function OnMorphNanoCloud(OLSeqAct_MorphNanoCloud Action)
{
}

function OnSetNanoCloudVisibility(OLSeqAct_SetNanoCloudVisibility Action)
{
}

defaultproperties
{
}