/*******************************************************************************
 * OLHero generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2021 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OLHero extends OLPawn
    native
    config(Game)
    hidecategories(Navigation);

enum IKTargetType
{
    IKTT_DoorKnob,
    IKTT_CSAPropDestination,
    IKTT_Other,
    IKTT_MAX
};

enum CornerPeekPosition
{
    CPP_Left,
    CPP_Right,
    CPP_MiddleLeft,
    CPP_MiddleRight,
    CPP_MAX
};

enum ECamcorderMode
{
    CCM_Default,
    CCM_PoweredNightVision,
    CCM_NightVision,
    CCM_MAX
};

enum ECamcorderState
{
    CCS_Inactive,
    CCS_Active,
    CCS_Raising,
    CCS_Lowering,
    CCS_ReloadingActive,
    CCS_ReloadingInactive,
    CCS_MAX
};

enum NVGlitchType
{
    NVGT_SuddenDrop,
    NVGT_SlowDrop,
    NVGT_Buzz,
    NVGT_LastBreath,
    NVGT_MAX
};

enum ELedgeTransitionType
{
    LTT_LeftInside,
    LTT_LeftOutside,
    LTT_RightInside,
    LTT_RightOutside,
    LTT_MAX
};

enum ELedgeClimbType
{
    LCT_ClimbUpToStand,
    LCT_ClimbUpToCrouch,
    LCT_ClimbOverToFalling,
    LCT_ClimbOverToStand,
    LCT_MAX
};

enum ESqueezeTransitionType
{
    STT_Left_Facing,
    STT_Left_Back,
    STT_Right_Facing,
    STT_Right_Back,
    STT_MAX
};

enum EDoorOpeningType
{
    DOT_LeftPush,
    DOT_LeftPull,
    DOT_RightPush,
    DOT_RightPull,
    DOT_MAX
};

enum EDoorPartialOpenType
{
    DPOT_LeftPush,
    DPOT_LeftPull,
    DPOT_LeftSwipe,
    DPOT_RightPush,
    DPOT_RightPull,
    DPOT_RightSwipe,
    DPOT_MAX
};

enum EDoorClosingType
{
    DCT_LeftFront,
    DCT_LeftSide,
    DCT_LeftBack,
    DCT_LeftInside,
    DCT_RightFront,
    DCT_RightSide,
    DCT_RightBack,
    DCT_RightInside,
    DCT_MAX
};

enum EEnemyType
{
    ET_Soldier,
    ET_Generic,
    ET_Surgeon,
    ET_Swarm,
    ET_Other,
    ET_Groom,
    ET_Cannibal,
    ET_MAX
};

enum EHeroBodySetup
{
    HBS_Normal,
    HBS_NoProxy,
    HBS_CamcorderRaised,
    HBS_CamcorderRaisedNoShadow,
    HBS_CamcorderVisible,
    HBS_MAX
};

struct native HandIKData
{
    var bool bActive;
    var OLHero.IKTargetType IKTarget;
    var float StartTime;
    var float Duration;
    var float FadeInTime;
    var float FadeOutTime;
    var Vector EffectorOffset;

    structdefaultproperties
    {
        // Object Offset:0x00195109
        bActive=false
        IKTarget=IKTargetType.IKTT_DoorKnob
        StartTime=0.0
        Duration=0.0
        FadeInTime=0.0
        FadeOutTime=0.0
        EffectorOffset=(X=0.0,Y=0.0,Z=0.0)
    }
};

struct native CornerPeekData
{
    var OLCornerMarker CornerMarker;
    var OLHero.CornerPeekPosition PeekPosition;
    var Vector CornerLocation;
    var Vector FwdDir;
    var Vector SideDir;
    var bool bRoundedCorner;
    var float IKStrength;
    var float LastInterpActivatedTime;
    var float LastDisconnectTime;
    var bool bDisconnecting;
    var Vector AnchorPos;
    var Quat AnchorRot;
    var Vector JointTargetPos;

    structdefaultproperties
    {
        // Object Offset:0x00195486
        CornerMarker=none
        PeekPosition=CornerPeekPosition.CPP_Left
        CornerLocation=(X=0.0,Y=0.0,Z=0.0)
        FwdDir=(X=0.0,Y=0.0,Z=0.0)
        SideDir=(X=0.0,Y=0.0,Z=0.0)
        bRoundedCorner=false
        IKStrength=0.0
        LastInterpActivatedTime=0.0
        LastDisconnectTime=0.0
        bDisconnecting=false
        AnchorPos=(X=0.0,Y=0.0,Z=0.0)
        AnchorRot=(X=0.0,Y=0.0,Z=0.0,W=0.0)
        JointTargetPos=(X=0.0,Y=0.0,Z=0.0)
    }
};

struct native AttachmentData
{
    var export editinline PrimitiveComponent AttachedComp;
    var bool bHideWhenDone;
    var float BlendInTime;
    var float BlendOutTime;
    var float Duration;
    var Vector PositionOffset;
    var Rotator RotationOffset;
    var bool bActive;
    var bool bAttached;
    var float StartTimestamp;
    var Vector BlendStartPos;
    var Quat BlendStartRot;

    structdefaultproperties
    {
        // Object Offset:0x0019588C
        AttachedComp=none
        bHideWhenDone=false
        BlendInTime=0.0
        BlendOutTime=0.0
        Duration=0.0
        PositionOffset=(X=0.0,Y=0.0,Z=0.0)
        RotationOffset=(Pitch=0,Yaw=0,Roll=0)
        bActive=false
        bAttached=false
        StartTimestamp=0.0
        BlendStartPos=(X=0.0,Y=0.0,Z=0.0)
        BlendStartRot=(X=0.0,Y=0.0,Z=0.0,W=0.0)
    }
};

struct native CameraParameters
{
    var float MinYaw;
    var float MaxYaw;
    var float MinPitchWS;
    var float MaxPitchWS;
    var float MinPitchCS;
    var float MaxPitchCS;

    structdefaultproperties
    {
        // Object Offset:0x00195B43
        MinYaw=0.0
        MaxYaw=0.0
        MinPitchWS=0.0
        MaxPitchWS=0.0
        MinPitchCS=0.0
        MaxPitchCS=0.0
    }
};

struct native NVGlitchData
{
    var bool bGlitching;
    var float CurrentLevel;
    var float NextGlitchTime;
    var float StartTime;
    var OLHero.NVGlitchType GlitchType;
    var float TargetLevel;
    var float Duration;

    structdefaultproperties
    {
        // Object Offset:0x001844A9
        bGlitching=false
        CurrentLevel=0.0
        NextGlitchTime=0.0
        StartTime=0.0
        GlitchType=NVGlitchType.NVGT_SuddenDrop
        TargetLevel=0.0
        Duration=0.0
    }
};

struct native LocomotionModeParameters
{
    var GameplayParams GP;
    var float NeckOffsetSide;
    var float NeckOffsetFwd;

    structdefaultproperties
    {
        // Object Offset:0x00184AD1
        GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_UserControlled,MinYaw=0.0,MaxYaw=0.0,MinPitchWS=-84.0,MaxPitchWS=70.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false)
        NeckOffsetSide=0.0
        NeckOffsetFwd=0.0
    }
};

struct native AIPositionPoint
{
    var Vector Location;
    var Vector LocationOnNavMesh;
    var array<OLEnemyPawn> PawnsOccupying;
    var bool bValid;

    structdefaultproperties
    {
        // Object Offset:0x00185050
        Location=(X=0.0,Y=0.0,Z=0.0)
        LocationOnNavMesh=(X=0.0,Y=0.0,Z=0.0)
        PawnsOccupying=none
        bValid=false
    }
};

struct native AIPositionPawnInfo
{
    var OLEnemyPawn Enemy;
    var int PointIndex;
    var float TimeToNextChange;

    structdefaultproperties
    {
        // Object Offset:0x00185195
        Enemy=none
        PointIndex=0
        TimeToNextChange=0.0
    }
};

var OLPlayerController OLPC;
var OLHero DefaultHero;
var Vector CharForward;
var Vector EyeForward;
var transient array<OLLedgeMarker> CachedMarkers;
var transient array<OLHidingSpot> CachedHidingSpots;
var transient array<OLDoor> CachedDoors;
var transient array<OLBed> CachedBeds;
var transient array<OLPickableObject> CachedPickables;
var transient array<OLLadderMarker> CachedLadders;
var transient array<OLCSA> CachedCSAs;
var transient array<OLScareMoment> CachedScares;
var transient array<OLPushableObject> CachedPushables;
var transient array<OLCornerMarker> CachedCorners;
var transient array<OLHeatMarker> CachedHeatMarkers;
var transient array<OLRecordingMarker> CachedRecordingMarkers;
var transient array<OLPreferredPathMarker> CachedPreferredPathMarkers;
var transient array<Light> CachedLights;
var transient Vector CachedObjectsPos;
var native transient array<Pointer> CachedLevelList;
var export editinline SkeletalMeshComponent ShadowProxy;
var export editinline StaticMeshComponent HeadMesh;
var export editinline SkeletalMeshComponent CameraMesh;
var export editinline SkeletalMeshComponent CameraMeshShadowProxy;
var export editinline ParticleSystemComponent BloodEffect;
var export editinline ParticleSystemComponent DeathParticles;
var export editinline ParticleSystemComponent DecapitatedBloodEffect;
var export editinline ParticleSystemComponent RainEffect;
var export editinline ParticleSystemComponent WaterFootstepParticlesLeft;
var export editinline ParticleSystemComponent WaterFootstepParticlesRight;
var export editinline ParticleSystemComponent WaterSplashParticles;
var export editinline ParticleSystemComponent GenericCameraEffect;
var export editinline SpotLightComponent NVLightPowered;
var export editinline SpotLightComponent NVLightDefault;
var export editinline SpotLightComponent DarkLight;
var export editinline PointLightComponent CamcorderScreenLight;
var SkeletalMesh FingerlessMesh;
var SkeletalMesh ITTechMesh;
var SkeletalMesh PrisonerMesh;
var MaterialInstanceConstant FootstepDecalMatL1;
var MaterialInstanceConstant FootstepDecalMatL2;
var MaterialInstanceConstant FootstepDecalMatR1;
var MaterialInstanceConstant FootstepDecalMatR2;
var MaterialInstanceConstant FootstepBarefeetDecalMatL1;
var MaterialInstanceConstant FootstepBarefeetDecalMatL2;
var MaterialInstanceConstant FootstepBarefeetDecalMatR1;
var MaterialInstanceConstant FootstepBarefeetDecalMatR2;
var MaterialInstanceConstant CameraScreenMat;
var name CameraScreenParamName;
var AnimNodeSlot RightArmAnimSlot;
var AnimNodeSlot ShadowProxyRightArmAnimSlot;
var AnimNodeSlot LeftArmAnimSlot;
var AnimNodeSlot ShadowProxyLeftArmAnimSlot;
var AnimNodeBlendPerBone LeftArmWallContactFilterNode;
var AnimNodeBlendPerBone ShadowProxyLeftArmWallContactFilterNode;
var AnimNodeSequence LeftArmWallContactAnimSequence;
var AnimNodeSequence ShadowProxyLeftArmWallContactAnimSequence;
var AnimNodeSequence BedAnimNode;
var AnimNodeSequence ShadowProxyBedAnimNode;
var AnimNodeBlendPerBone LeftFootPlacementNode;
var AnimNodeBlendPerBone ShadowProxyLeftFootPlacementNode;
var AnimNodeBlendPerBone RightFootPlacementNode;
var AnimNodeBlendPerBone ShadowProxyRightFootPlacementNode;
var SkelControlLimb ShadowProxyLeftHandIK;
var SkelControlLimb ShadowProxyRightHandIK;
var SkelControlSingleBone HiddenRightArmControl;
var SkelControlSingleBone HiddenLeftArmControl;
var SkelControlBase LeftForeTwistControl;
var SkelControlBase ShadowProxyLeftForeTwistControl;
var SkelControlBase LeftForeTwist1Control;
var SkelControlBase ShadowProxyLeftForeTwist1Control;
var SkelControlBase LeftUpArmTwistControl;
var SkelControlBase ShadowProxyLeftUpArmTwistControl;
var SkelControlBase RightForeTwistControl;
var SkelControlBase ShadowProxyRightForeTwistControl;
var SkelControlBase RightUpArmTwistControl;
var SkelControlBase ShadowProxyRightUpArmTwistControl;
var SkelControlBase ShadowProxyRightClavicleFixup;
var bool bLeftHandIKActive;
var bool bRightHandIKActive;
var bool bShouldHideLeftHandDuringSM;
var bool bShouldHideRightHandDuringSM;
var bool bMustCrouchAfterSpecialMove;
var bool bForcedCrouch;
var bool bLeaningLeftPushing;
var bool bLeaningRightPushing;
var bool bWantToRun;
var bool bIsGhost;
var bool bPlayingRunSnd;
var bool bElectricGlitchActive;
var bool bElectrified;
var bool bHeatShielding;
var bool bParrying;
var bool bLimping;
var bool bHobbling;
var bool bCamcorderDesired;
var bool bLastCinematicModeDisabledCamcorder;
var bool bBothHandsNeeded;
var bool bPlayingNVGlitchSound;
var bool bRainEffectDesired;
var bool bCameraCracked;
var bool bOverrideDarkLight;
var bool bCameraEffectActive;
var bool bBlockConstrainedMovement;
var bool bKillConstrainedMovement;
var bool bWantLookBack;
var bool bLeftAnim;
var bool bBackAnim;
var bool bExitLadderLeftHand;
var bool bLookingBackLeftSide;
var bool bRunningTraversalMove;
var bool bApplyLandingPenalty;
var bool bJumping;
var bool bPushingFromBackEdge;
var bool bEnterLedgeWalkAfterStruggle;
var bool bStartingSpecialMove;
var bool bJumpFromLedgeWalkWithVelocity;
var bool bPickupCrouched;
var bool bDoorStartingRatioReached;
var bool bQuietDoorInteraction;
var bool MovingNoiseActive;
var bool bWasUnder;
var float MeshZOffset;
var float MeshXOffset;
var float LastFrameMeshZOffset;
var HandIKData LeftHandIKData;
var CornerPeekData CornerPeek;
var float LastValidCornerPeekTime;
var OLCornerMarker LastValidCornerMarker;
var OLHero.CornerPeekPosition LastValidCornerPeekPosition;
var OLHero.ECamcorderMode CamcorderMode;
var OLHero.ECamcorderState CamcorderState;
var OLHero.ELedgeTransitionType ActiveLedgeTransitionType;
var OLHero.ELedgeClimbType LedgeClimbType;
var OLHero.ESqueezeTransitionType SqueezeTransitionType;
var OLHero.EDoorOpeningType DoorOpeningType;
var OLHero.EDoorPartialOpenType DoorPartialOpenType;
var OLHero.EDoorClosingType DoorClosingType;
var OLHero.EEnemyType EnemyType;
var OLEnemyPawn.EWeaponType EnemyWeapon;
var OLHero.EHeroBodySetup BodySetup;
var AttachmentData ActiveAttachment;
var float CurrentLean;
var float LastLeanSndTime;
var float LastFootstepTime;
var float LargeSlopeStartedTime;
var int RemainingBloodyFootsteps;
var name LeftHandBoneName;
var name LeftHandAuxBoneName;
var name RightHandAuxBoneName;
var Vector EyeLocation;
var Rotator EyeRotation;
var float CurrentFOV;
var Matrix CameraCompSpace;
var CameraParameters CamParams;
var float LastDamageTime;
var class<OLDmgType> LastDamageType;
var float LastScriptedDamageEffectTime;
var float PreciseHealth;
var float ElectricEffectStartTime;
var float NextElectricHurtSoundTime;
var float ElectricGlitchStartTime;
var float ElectricGlitchMaxIntensity;
var float ElectricGlitchDuration;
var float ElectricGlitchFrequency;
var float TimeOfDeath;
var float HeatDistance;
var float LastHeatDamageTime;
var float LastElectricDamageTime;
var float CurrentHeatBlur;
var float HobblingIntensity;
var float TargetHobblingIntensity;
var float CamcorderDisabledEndTime;
var float LastCamcorderSwitchTime;
var float CurrentBatterySetEnergy;
var float CurrentCamcorderZoomFactor;
var float TargetCamcorderZoomFactor;
var float NVLightInterpFactor;
var float LastRainEffectActiveTime;
var float CurrentDarkLightRadius;
var float CurrentDarkLightBrightness;
var float DarkLightOverrideBrightness;
var float DarkLightOverrideRadius;
var float CameraEffectEndTime;
var float CameraEffectPlaneDist;
var float OverriddenMinCamcorderFOV;
var NVGlitchData NVGlitch;
var Vector DesiredMoveDirection;
var Vector ExternalImpulse;
var float LedgeHangIdleStartTime;
var float WalkSpeed;
var float RunSpeed;
var float CurrentRunSpeed;
var float InputMovementScaling;
var LocomotionModeParameters LocomotionModeParams[ELocomotionMode];
var OLSeqAct_HeroControl HeroControl;
var OLSqueezeVolume ActiveSqueeze;
var OLLedgeMarker ActiveLedge;
var OLDoor ActiveDoor;
var OLLadderMarker ActiveLadder;
var OLPickableObject ActivePickup;
var OLHidingSpot ActiveLocker;
var OLBed ActiveBed;
var OLCSA ActiveCSA;
var OLPushableObject ActivePushable;
var float SpecialMoveBlendAlpha;
var float SpecialMoveTargetYaw;
var float EnterBedZ;
var float LastCompletedDoorInteractionTime;
var float LastActiveLedgeTimestamp;
var float LastActiveLedgeZ;
var float LastActiveLadderTimestamp;
var float LastSpecialMoveFinishedTime;
var float LastClimbUpObstacleFinishedTime;
var float RunStartedTime;
var float LastLandingTimestamp;
var float SpecialMoveStalledTimestamp;
var float FallingStartedTime;
var float LastEnterLookBackTime;
var float DoorInteractionStartingRatio;
var float DoorSlowClosingAnimStartTime;
var float MovingNoiseTimer;
var array<AIPositionPoint> AIPositionPoints;
var array<AIPositionPawnInfo> AIPositionPawns;
var int LastAIPositionChecked;
var const float NumAIPositions;
var const float AIPositionDistance;
var const float AIPositionLayerBuffer;
var const int NumAIPositionsPerSidePerPawn;
var const int NumAIPositionsToCheckPerFrame;
var Vector AvgVelocity;
var array<Vector2D> AvgVelPoints;
var float AvgVelocityTimer;
var const float NumAvgVelPoints;
var const float AvgVelPointLength;
var config name FirstFingerlessCheckpoint;
var config name ShatteredCameraGlassCheckpoint;
var config name ITUniformCheckpoint;
var config name PrisonerUniformCheckpoint;
var config float NormalWalkSpeed;
var config float NormalRunSpeed;
var config float CrouchedSpeed;
var config float ElectrifiedSpeed;
var config float WaterWalkSpeed;
var config float WaterRunSpeed;
var config float LimpingWalkSpeed;
var config float HobblingWalkSpeed;
var config float HobblingRunSpeed;
var config float SpeedPenaltyBackwards;
var config float SpeedPenaltyStrafe;
var config float ForwardSpeedForJumpWalking;
var config float ForwardSpeedForJumpRunning;
var config float JumpClearanceWalking;
var config float JumpClearanceRunning;
var config float LandingPenaltyDuration;
var config float LandingSpeedModifier;
var config float ElectrifiedJumpDelay;
var config float ExternalImpulseDecelCoeff;
var config float ExternalImpulseMinVel;
var config float ExternalImpulseMaxVel;
var config float ExternalImpulseMaxVelCrouched;
var config float FallSpeedForDamage;
var config float FallSpeedForDeath;
var config float FallDamageExponent;
var config float DefaultFOV;
var config float RunningFOV;
var config float FOVApproachCoeffOpening;
var config float FOVApproachCoeffClosing;
var config float FOVApproachCoeffRun;
var config float FOVApproachCoeffWalk;
var float BatteryDuration;
var config float NrmBatteryDuration;
var config float HardBatteryDuration;
var config float CamcorderMinFOV;
var config float CamcorderMaxFOV;
var config float CamcorderNVMaxFOV;
var config float NVLightZoomedInInnerAngle;
var config float NVLightZoomedInOuterAngle;
var config float NVLightZoomedInRadius;
var config float NVLightZoomedInBrightness;
var config float DarkLightBrightnessDefault;
var config float DarkLightRadiusDefault;
var config float DarkLightBrightnessNoCamcorder;
var config float DarkLightRadiusNoCamcorder;
var config float DarkLightBrightnessBothHandsNeeded;
var config float DarkLightRadiusBothHandsNeeded;
var config float DarkLightBrightnessAttacked;
var config float DarkLightRadiusAttacked;
var config float DarkLightBrightnessParrying;
var config float DarkLightRadiusParrying;
var config float NVGlitchTimeThreshold;
var config float NVGlitchMaxDelayStart;
var config float NVGlitchMaxDelayEnd;
var config float NVGlitchMinDuration;
var config float NVGlitchMaxDuration;
var config float NVGlitchMaxLevel;
var config float HealthRegenRate;
var config float HealthRegenDelay;
var config float HobbleApproachRate;
var config float ElectricEffectPeriod;
var config float ElectricEffectBase;
var config int ElectricEffectMode;
var config float ElectricHurtSoundInterval;
var config float DeathScreenDuration;
var config int NumBloodyFootsteps;
var config float HeatDamageDist;
var config float HeatDamageInterval;
var config float HeatDamagePerSec;
var config float HeatMaxBlurDist;
var config float HeatMinBlurDist;
var config float HeatMinBlurAmount;
var config float HeatBlurApproachCoeffIn;
var config float HeatBlurApproachCoeffOut;
var config float MinCosAngleForPickup;
var config float PickupInteractRadius;
var config float JumpForwardFromLedgeWalkXYSpeed;
var config float JumpForwardFromLedgeWalkZSpeed;
var config float DropFromLedgeWalkXYSpeed;
var config float DropFromLedgeWalkZSpeed;
var config float LookBackCamRotOffset;
var config float LookBackCamBackOffset;
var config float LookBackCamSideOffset;
var config float LeanSpeedThreshold;
var config float WalkingLoudness;
var config float CrouchLoudness;
var config float RunningLoudness;
var config float WalkingWaterLoudness;
var config float CrouchWaterLoudness;
var config float HobblingWalkLoudness;
var config float HobblingRunLoudness;
var config float LandingBigLoudness;
var config float LandingSmallLoudness;
var config float LandingBigWaterLoudness;
var config float LandingSmallWaterLoudness;
var config float DoorOpenInstantLoudness;
var config float DoorOpenPartialLoudness;
var config float DoorCloseFastLoudness;
var config float DoorEnterLockerLoudness;
var config float DoorExitLockerLoudness;
var config float DoorRunThroughLoudness;
var config float MovingNoiseStartTime;
var config float MovingNoiseClearTime;
var const name CrouchNoise;
var const name WalkingNoise;
var const name RunningNoise;
var const name DoorMajorNoise;
var const float MovingNoiseRate;
var const name WaterMaterial;
var const name BloodMaterial;
var const ForceFeedbackWaveform BigLandingFFWaveform;
var const ForceFeedbackWaveform SmallLandingFFWaveform;
var const ForceFeedbackWaveform PickupFFWaveform;
var const ForceFeedbackWaveform DoorInteractionFFWaveform;
var const ForceFeedbackWaveform RunThroughDoorFFWaveform;
var const string StateHitIntensityGroup;
var const string StateHitIntensityLow;
var const string StateHitIntensityMed;
var const string StateHitIntensityHigh;
var const string RTPCHealth;
var const string RTPCZoom;
var const string RTPCBatteryIntensity;
var const name AnimNameJumpFromWalk;
var const name AnimNameJumpFromRun;
var const name AnimNameJumpOverFromWalk;
var const name AnimNameJumpOverFromRun;
var const name AnimNameJumpOverToGrabLedge;
var const name AnimNameClimbUpFromWalk;
var const name AnimNameClimbUpFromRun;
var const name AnimNameClimbUpToCrouch;
var const name AnimNameClimbUpWall150;
var const name AnimNameClimbUpWall200;
var const name AnimNameClimbOverWall200;
var const name AnimNameCrouch;
var const name AnimNameUncrouch;
var const name AnimNameLedgeHangLeftInside;
var const name AnimNameLedgeHangRightInside;
var const name AnimNameLedgeHangLeftOutside;
var const name AnimNameLedgeHangRightOutside;
var const name AnimNameClimbUpLedgeToCrouch;
var const name AnimNameClimbUpLedgeToStand;
var const name AnimNameClimbOverLedgeToFalling;
var const name AnimNameClimbOverLedgeToStand;
var const name AnimNameSlideOverFromRun;
var const name AnimNameGrabAndClimb;
var const name AnimNameGrabLedgeFromAir;
var const name AnimNameGrabLedgeFromWalkHigh;
var const name AnimNameGrabLedgeFromWalkLow;
var const name AnimNameLandingSmallStanding;
var const name AnimNameLandingSmallCrouched;
var const name AnimNameBigLandingStanding;
var const name AnimNameBigLandingCrouched;
var const name AnimNameEnterLedgeWalkInsideLeftPerp;
var const name AnimNameEnterLedgeWalkInsideLeftPrl;
var const name AnimNameEnterLedgeWalkInsideRightPerp;
var const name AnimNameEnterLedgeWalkInsideRightPrl;
var const name AnimNameEnterLedgeWalkOutsideLeftPerp;
var const name AnimNameEnterLedgeWalkOutsideLeftPrl;
var const name AnimNameEnterLedgeWalkOutsideRightPerp;
var const name AnimNameEnterLedgeWalkOutsideRightPrl;
var const name AnimNameLedgeWalkTransitionLeftInside;
var const name AnimNameLedgeWalkTransitionLeftOutside;
var const name AnimNameLedgeWalkTransitionRightInside;
var const name AnimNameLedgeWalkTransitionRightOutside;
var const name AnimNameExitLedgeWalkRightInside;
var const name AnimNameExitLedgeWalkLeftInside;
var const name AnimNameExitLedgeWalkRightOutside;
var const name AnimNameExitLedgeWalkLeftOutside;
var const name AnimNameJumpFromLedgeWalk;
var const name AnimNameStepOffFromLedgeWalk;
var const name AnimNameEnterSqueezeLeft;
var const name AnimNameEnterSqueezeRight;
var const name AnimNameExitSqueezeLeft;
var const name AnimNameExitSqueezeRight;
var const name AnimNameAutomaticSqueeze;
var const name AnimNameEnterLadderGroundStraight;
var const name AnimNameEnterLadderGround45Left;
var const name AnimNameEnterLadderGround45Right;
var const name AnimNameExitLadderOnTopLH;
var const name AnimNameExitLadderOnTopRH;
var const name AnimNamePickupObject_h40v70;
var const name AnimNamePickupObject_h40v140;
var const name AnimNamePickupObject_h85v70;
var const name AnimNamePickupObject_h85v140;
var const name AnimNamePickupObject_h62v105;
var const name AnimNamePickupObjectCrouched_h30vm10;
var const name AnimNamePickupObjectCrouched_h60vm10;
var const name AnimNamePickupObjectCrouched_h45v35;
var const name AnimNamePickupObjectCrouched_h30v60;
var const name AnimNamePickupObjectCrouched_h60v60;
var const name AnimNamePickupDoc_h40v70;
var const name AnimNamePickupDoc_h40v140;
var const name AnimNamePickupDoc_h85v70;
var const name AnimNamePickupDoc_h85v140;
var const name AnimNamePickupDoc_h62v105;
var const name AnimNamePickupDocCrouched_h30vm10;
var const name AnimNamePickupDocCrouched_h60vm10;
var const name AnimNamePickupDocCrouched_h45v35;
var const name AnimNamePickupDocCrouched_h30v60;
var const name AnimNamePickupDocCrouched_h60v60;
var const name AnimNamePutdownObject;
var const name AnimNameCloseDoorLeftFront;
var const name AnimNameCloseDoorLeftSide;
var const name AnimNameCloseDoorLeftBack;
var const name AnimNameCloseDoorLeftInside;
var const name AnimNameCloseDoorRightFront;
var const name AnimNameCloseDoorRightSide;
var const name AnimNameCloseDoorRightBack;
var const name AnimNameCloseDoorRightInside;
var const name AnimNameCloseDoorLeftFrontSlow;
var const name AnimNameCloseDoorLeftSideSlow;
var const name AnimNameCloseDoorLeftBackSlow;
var const name AnimNameCloseDoorLeftInsideSlow;
var const name AnimNameCloseDoorRightFrontSlow;
var const name AnimNameCloseDoorRightSideSlow;
var const name AnimNameCloseDoorRightBackSlow;
var const name AnimNameCloseDoorRightInsideSlow;
var const name AnimNameDoorOpenPullLeft;
var const name AnimNameDoorOpenPullRight;
var const name AnimNameDoorOpenPushLeft;
var const name AnimNameDoorOpenPushRight;
var const name AnimNameDoorRunThroughLeft;
var const name AnimNameDoorRunThroughRight;
var const name AnimNameDoorOpenInsidePushLeft;
var const name AnimNameDoorOpenInsidePushRight;
var const name AnimNameDoorAccessLeft;
var const name AnimNameDoorAccessRight;
var const name AnimNameDoorAccessLeftPull15;
var const name AnimNameDoorAccessRightPull15;
var const name AnimNameDoorAccessLeftPush15;
var const name AnimNameDoorAccessRightPush15;
var const name AnimNameDoorLockedLeft;
var const name AnimNameDoorLockedRight;
var const name AnimNameLockerOpenStraight;
var const name AnimNameLockerOpen45Left;
var const name AnimNameLockerOpen45Right;
var const name AnimNameHideInLocker;
var const name AnimNameGrabFromSqueezeLeftFacing;
var const name AnimNameGrabFromSqueezeLeftBack;
var const name AnimNameGrabFromSqueezeRightFacing;
var const name AnimNameGrabFromSqueezeRightBack;
var const name AnimNameGrabFromSqueezePhase1Right0;
var const name AnimNameGrabFromSqueezePhase1Right90;
var const name AnimNameGrabFromSqueezePhase1Right180;
var const name AnimNameGrabFromSqueezePhase1Left0;
var const name AnimNameGrabFromSqueezePhase1Left90;
var const name AnimNameGrabFromSqueezePhase1Left180;
var const name AnimNameEnterBedLeft;
var const name AnimNameEnterBedRight;
var const name AnimNameEnterBedLeftFromStand;
var const name AnimNameEnterBedRightFromStand;
var const name AnimNameExitBedLeft;
var const name AnimNameExitBedRight;
var const name AnimNameExitBedLeftToCrouch;
var const name AnimNameExitBedRightToCrouch;
var const name AnimNameEnterPushObjectLeft;
var const name AnimNameEnterPushObjectRight;
var const name AnimNameExitPushObjectLeft;
var const name AnimNameExitPushObjectRight;
var const name AnimNameRaiseCamcorder;
var const name AnimNameLowerCamcorder;
var const name AnimNameRaiseCamcorderBed;
var const name AnimNameLowerCamcorderBed;
var const name AnimNameRaiseCamcorderCrouched;
var const name AnimNameLowerCamcorderCrouched;
var const name AnimNameReloadBatteries;
var const name AnimNameReloadBatteriesInactive;
var const name AnimNameReloadBatteriesCrouched;
var const name AnimNameReloadBatteriesCrouchedInactive;
var const name AnimNameReloadBatteriesBed;
var const name AnimNameReloadBatteriesBedInactive;
var const name AnimNameReloadBatteriesSqueeze;
var const name AnimNameReloadBatteriesSqueezeInactive;
var const name AnimNameGrabNormal;
var const name AnimNameGrabNormalLeft90;
var const name AnimNameGrabNormalLeft180;
var const name AnimNameGrabNormalRight90;
var const name AnimNameGrabNormalRight180;
var const name AnimNameGrabCrouched;
var const name AnimNameGrabCrouchedLeft90;
var const name AnimNameGrabCrouchedLeft180;
var const name AnimNameGrabCrouchedRight90;
var const name AnimNameGrabCrouchedRight180;
var const name AnimNameGrabUnder;
var const name AnimNameGrabUnderCCW;
var const name AnimNameGrabUnderLeft90;
var const name AnimNameGrabUnderLeft180;
var const name AnimNameGrabUnderRight90;
var const name AnimNameGrabUnderRight180;
var const name AnimNameGrabFromBedLeft;
var const name AnimNameGrabFromBedRight;
var const name AnimNameGrabFromLocker;
var const name AnimNameThrown;
var const name AnimNameThrownLeft90;
var const name AnimNameThrownLeft180;
var const name AnimNameThrownRight90;
var const name AnimNameThrownRight180;
var const name AnimNameHitReactionFwd;
var const name AnimNameHitReactionBwd;
var const name AnimNameHitReactionLeft;
var const name AnimNameHitReactionRight;
var const name AnimNameHitReactionCrouchedFwd;
var const name AnimNameHitReactionCrouchedBwd;
var const name AnimNameHitReactionCrouchedLeft;
var const name AnimNameHitReactionCrouchedRight;
var const name AnimNameWallContactLeftHard;
var const name AnimNameWallContactLeftSoft;
var const name AnimNameWallContactRightHard;
var const name AnimNameWallContactRightSoft;
var const name AnimNameEnterCornerPeekLeftHard;
var const name AnimNameEnterCornerPeekLeftSoft;
var const name AnimNameEnterCornerPeekRightHard;
var const name AnimNameEnterCornerPeekRightSoft;
var const name AnimNameExitCornerPeekLeftHard;
var const name AnimNameExitCornerPeekLeftSoft;
var const name AnimNameExitCornerPeekRightHard;
var const name AnimNameExitCornerPeekRightSoft;
var const name AnimNameExitCornerPeekForwardLeftHard;
var const name AnimNameExitCornerPeekForwardLeftSoft;
var const name AnimNameExitCornerPeekForwardRightHard;
var const name AnimNameExitCornerPeekForwardRightSoft;
var const name AnimNameCornerTransitionFromLeft;
var const name AnimNameCornerTransitionFromRight;
var const name AnimNameGenericGrabFromBedLeft;
var const name AnimNameGenericGrabFromBedRight;
var const name AnimNameGenericGrabFromLocker;
var const name AnimNameGenericGrabUnder;
var const name AnimNameGenericGrabUnderLeft90;
var const name AnimNameGenericGrabUnderLeft180;
var const name AnimNameGenericGrabUnderRight90;
var const name AnimNameGenericGrabUnderRight180;
var const name AnimNamePushawayLeft;
var const name AnimNamePushawayRight;
var const name AnimNameGenericDeath;
var const name AnimNameFatalityBackstabBack;
var const name AnimNameFatalityBackstabLeft;
var const name AnimNameFatalityBackstabRight;
var const name AnimNameFatalityChokeFront;
var const name AnimNameFatalityChokeLeft;
var const name AnimNameFatalityChokeRight;
var const name AnimNameFatalityClubBack;
var const name AnimNameFatalityClubFront;
var const name AnimNameFatalityClubLeft;
var const name AnimNameFatalityClubRight;
var const name AnimNameFatalityStabChopFront;
var const name AnimNameFatalityStabChopLeft;
var const name AnimNameFatalityStabChopRight;
var const name AnimNameFatalityXplodeBack;
var const name AnimNameFatalityXplodeFront;
var const name AnimNameFatalityXplodeLeft;
var const name AnimNameFatalityXplodeRight;
var const name AnimNameFatalityLocker;
var const name AnimNameFatalitySoldier;
var const name AnimNameFatalityGroom;
var const float ObstacleMinZWalking;
var const float ObstacleMaxZWalking;
var const float ObstacleMinZFalling;
var const float ObstacleMaxZFalling;
var const float MinCosAngleToObstacle;
var const float MaxLedgeCosAngle;
var const float MinWidthForClimbWalking;
var const float MinWidthForClimbRunning;
var const float MinWidthForClimbUpWall;
var const float MinWidthForSlide;
var const float MaxWidthForSlide;
var const float MinHeightForSlide;
var const float MaxHeightForSlide;
var const float StepUpAndLandInteractDist;
var const float JumpOverInteractDistWalking;
var const float JumpOverInteractDistRunning;
var const float JumpOverInteractDistFalling;
var const float JumpOverMinObstacleZ;
var const float JumpOverExpectedDistWalking;
var const float JumpOverExpectedHeightWalking;
var const float JumpOverExpectedDistRunning;
var const float JumpOverExpectedHeightRunning;
var const float JumpOverAndGrabLedgeInteractDistWalking;
var const float JumpOverAndGrabLedgeInteractDistRunning;
var const float JumpOverAndGrabLedgeInteractDistFalling;
var const float JumpOverAndGrabLedgeExpectedDist;
var const float JumpOverAndGrabLedgeExpectedHeightFromLedge;
var const float SlideOverInteractDistMin;
var const float SlideOverInteractDistMax;
var const float SlideOverExpectedDist;
var const float SlideOverExpectedHeight;
var const float ClimbUpInteractDistWalking;
var const float ClimbUpInteractDistRunning;
var const float ClimbUpInteractDistFalling;
var const float ClimbUpWallInteractHeightMin;
var const float ClimbUpExpectedDistWalking;
var const float ClimbUpExpectedHeightWalking;
var const float ClimbUpExpectedDistRunning;
var const float ClimbUpExpectedHeightRunning;
var const float ClimbUpWallExpectedDist;
var const float ClimbUpWallExpectedHeightMin;
var const float ClimbUpWallExpectedHeightMax;
var const float ClimbOverWallExpectedDist;
var const float ClimbOverWallExpectedHeight;
var const float ClimbUpToCrouchExpectedDist;
var const float ClimbUpToCrouchExpectedHeight;
var const float ClimbUpToCrouchMinHeight;
var const float GrabLedgeInteractDistWalking;
var const float GrabLedgeInteractDistRunning;
var const float GrabLedgeMinHeightOnGround;
var const float GrabLedgeMaxHeightOnGround;
var const float GrabLedgeMinFloorClearance;
var const float GrabLedgeFromJumpOverMinFloorClearance;
var const float GrabLedgeMinHeightInAir;
var const float GrabLedgeMaxHeightInAir;
var const float GrabLedgeInteractDistGoingDown;
var const float GrabLedgeMinHeightInAirGoingDown;
var const float GrabLedgeMaxHeightInAirGoingDown;
var const float GrabLedgeFromGroundExpectedHeight;
var const float GrabLedgeFromAirExpectedHeight;
var const float GrabAndClimbInteractDist;
var const float GrabAndClimbExpectedDistFwd;
var const float GrabAndClimbExpectedDistHeight;
var const float GrabAndClimbMinHeight;
var const float GrabAndClimbMaxHeight;
var const float LedgeHangDistToWall;
var const float LedgeHangHeightToLedge;
var const float LedgeHangTransitionInteractDist;
var const float LedgeHangTransitionInsideExpectedDist;
var const float LedgeHangTransitionOutsideExpectedDist;
var const float LedgeHangClimbOverMaxLedgeWidth;
var const float LedgeHangClimbOverMinHeightClearance;
var const float LedgeHangClimbOverFullHeightClearance;
var const float LedgeHangClimbUpMinFwdClearance;
var const float LedgeWalkTransitionInteractDistInside;
var const float LedgeWalkTransitionInteractDistOutside;
var const float LedgeWalkTransitionInteractDistExit;
var const float LedgeWalkEnterExpectedInsidePerpSideDist;
var const float LedgeWalkEnterExpectedOutsidePerpSideDist;
var const float LedgeWalkEnterExpectedInsidePrlSideDist;
var const float LedgeWalkEnterExpectedOutsidePrlSideDist;
var const float LedgeWalkEnterExpectedInsidePerpFwdDist;
var const float LedgeWalkEnterExpectedOutsidePerpFwdDist;
var const float LedgeWalkEnterExpectedInsidePrlFwdDist;
var const float LedgeWalkEnterExpectedOutsidePrlFwdDist;
var const float LedgeWalkTransitionExpectedDistInside;
var const float LedgeWalkTransitionExpectedDistOutside;
var const float LedgeWalkDistFromEdge;
var const float LedgeWalkMaxWallDist;
var const float LedgeWalkMinDrop;
var const float SqueezeInteractDist;
var const float SqueezeEnterExpectedDistFwd;
var const float SqueezeExitExpectedDistFwd;
var const float SqueezeDistFromCenter;
var const float EnterLockerInteractDistance;
var const float LadderEnterFromGroundInteractDist;
var const float LadderEnterFromAboveInteractDist;
var const float LadderGrabDist;
var const float LadderEnterFromGroundDeltaZ;
var const float LadderBarSpacing;
var const float LadderRootHeightOffsetFromBar;
var const float LadderEnterFromAboveExpectedDist;
var const float LadderDistFwd;
var const float LadderExitOnTopInteractDist;
var const float LadderExitOnGroundInteractDist;
var const float LadderMaxHeightForDrop;
var const float PickupObjectExpectedDist;
var const float PickupObjectInteractDistMinHorz;
var const float PickupObjectInteractDistMaxHorz;
var const float PickupObjectInteractDistMinVertStanding;
var const float PickupObjectInteractDistMaxVertStanding;
var const float PickupObjectInteractDistMinVertCrouched;
var const float PickupObjectInteractDistMaxVertCrouched;
var const float DoorOpenInteractionDist;
var const float DoorOpenExpectedFwdDist;
var const float DoorOpenExpectedSideDist;
var const float DoorOpenInsideExpectedDistFwd;
var const float DoorRunThroughInteractDist;
var const float DoorRunThroughExpectedDist;
var const float DoorInteractiveOpenMaxAngle;
var const float DoorMaxAngleForInteractiveOpen;
var const float DoorCloseInteractionDist;
var const float DoorCloseExpectedDistFwd;
var const float LockerOpenStraightExpectedDistSide;
var const float LockerOpenLeftExpectedDistSide;
var const float LockerOpenRightExpectedDistSide;
var const float LockerOpenExpectedDistFwd;
var const float LockerEnterExpectedDistSide;
var const float LockerEnterExpectedDistFwd;
var const float GrabFromSqueezeMaxDistance;
var const float GrabFromSqueezeExpectedDistance;
var const float BedInteractDistance;
var const float BedEnterExpectedFwdDist;
var const float BedEnterExpectedSideDist;
var const float PushableInteractDist;
var const float PushableInteractMinLookCosAngle;
var const float PushableExpectedDistFromEdge;
var const float PushableExpectedSideOffset;
var const float PushFromLedgeAnimatedExpectedDist;
var const float PushFromLedgeAnimatedInteractDist;
var const float PushFromLedgeAnimatedMinHeight;
var const float PushFromLedgeProceduralInteractDist;
var const float PeekingEnterInteractDistFromWall;
var const float PeekingEnterInteractDistFromEdgeMin;
var const float PeekingEnterInteractDistFromEdgeMax;
var const float PeekingEnterExpectedDistFromWall;
var const float PeekingEnterExpectedDistFromEdgeLeft;
var const float PeekingEnterExpectedDistFromEdgeRight;
var const float ImpactVelThresholdForBigLanding;
var const float ImpactVelThresholdForSmallLanding;
var const float ImpactVelThresholdForSpeedPenalty;
var const float MinEyeDistToWall;
var const float ForwardJumpSpeedThreshold;
var const float MaxGrabLedgeAdjustment;
var const float MaxSpeedPenaltyPctForInjuries;
var const Vector DefaultLeftHandJointTargetRotation;
var const Vector CornerPeekJointTargetPosLeft;
var const Vector CornerPeekJointTargetPosRight;

// Export UOLHero::execGetPawnViewLocation(FFrame&, void* const)
native simulated function Vector GetPawnViewLocation();

// Export UOLHero::execGetViewRotation(FFrame&, void* const)
native simulated event Rotator GetViewRotation();

// Export UOLHero::execWalk(FFrame&, void* const)
native function Walk();

// Export UOLHero::execTryRun(FFrame&, void* const)
native function bool TryRun();

// Export UOLHero::execIsRunning(FFrame&, void* const)
native function bool IsRunning();

// Export UOLHero::execResetAfterTeleport(FFrame&, void* const)
native function ResetAfterTeleport();

// Export UOLHero::execNativePostBeginPlay(FFrame&, void* const)
native function NativePostBeginPlay();

// Export UOLHero::execGetCamera(FFrame&, void* const)
native function GetCamera(out Vector out_CamLoc, out Rotator out_CamRot, out float out_FOV);

// Export UOLHero::execNativeDisplayDebug(FFrame&, void* const)
native function NativeDisplayDebug(Canvas Canvas, out float out_YL, out float out_YPos);

// Export UOLHero::execNativeTakeDamage(FFrame&, void* const)
native function NativeTakeDamage(int Damage, Controller InstigatedBy, Vector HitLocation, class<DamageType> DamageType);

// Export UOLHero::execNativeTakeFallingDamage(FFrame&, void* const)
native function NativeTakeFallingDamage();

// Export UOLHero::execActivateWaterFootstepParticles(FFrame&, void* const)
native function ActivateWaterFootstepParticles(bool bRightFoot);

// Export UOLHero::execOnPossess(FFrame&, void* const)
native function OnPossess();

// Export UOLHero::execStartSpecialMove(FFrame&, void* const)
native function StartSpecialMove(OLPawn.ESpecialMoveType moveType, optional Vector targetPosition, optional Vector TargetDirection, optional OLPawn.EAdjustPositionTargetType TargetType);

// Export UOLHero::execEnterCinematicMode(FFrame&, void* const)
native function EnterCinematicMode(SeqAct_ToggleCinematicMode seqAction);

// Export UOLHero::execExitCinematicMode(FFrame&, void* const)
native function ExitCinematicMode(SeqAct_ToggleCinematicMode seqAction);

// Export UOLHero::execHeroControlActivated(FFrame&, void* const)
native function bool HeroControlActivated(OLSeqAct_HeroControl heroControlAction);

// Export UOLHero::execTryGrabFromSqueeze(FFrame&, void* const)
native function bool TryGrabFromSqueeze(OLEnemyPawn attacker);

// Export UOLHero::execCanGrabFromSqueeze(FFrame&, void* const)
native function bool CanGrabFromSqueeze();

// Export UOLHero::execTryGrabFromLocker(FFrame&, void* const)
native function bool TryGrabFromLocker(OLEnemyPawn attacker);

// Export UOLHero::execTryExitLocker(FFrame&, void* const)
native function bool TryExitLocker();

// Export UOLHero::execTryExitBed(FFrame&, void* const)
native function bool TryExitBed(Vector playerIntentDirection);

// Export UOLHero::execTryGrabFromBed(FFrame&, void* const)
native function bool TryGrabFromBed(OLEnemyPawn attacker);

// Export UOLHero::execTryGrabNormal(FFrame&, void* const)
native function bool TryGrabNormal(OLEnemyPawn attacker, Vector StartLocation, Vector AttackStartLocation);

// Export UOLHero::execTryThrowPlayer(FFrame&, void* const)
native function bool TryThrowPlayer(OLEnemyPawn attacker, float ThrowRotation);

// Export UOLHero::execTryGrabFromUnder(FFrame&, void* const)
native function bool TryGrabFromUnder(OLEnemyPawn attacker, Vector StartLocation, Vector AttackStartLocation);

// Export UOLHero::execTryDecapitate(FFrame&, void* const)
native function bool TryDecapitate(OLEnemyPawn attacker);

// Export UOLHero::execTryKillHero(FFrame&, void* const)
native function bool TryKillHero(OLEnemyPawn attacker, Vector enemyStartLocation, Vector Direction);

// Export UOLHero::execTryKillInLocker(FFrame&, void* const)
native function bool TryKillInLocker(OLEnemyPawn attacker);

// Export UOLHero::execReactToHit(FFrame&, void* const)
native function ReactToHit(float hitStrength, Vector hitDirection, optional bool bForceFullPower);

// Export UOLHero::execPickupNotify(FFrame&, void* const)
native function PickupNotify();

// Export UOLHero::execDoorAnimNotify(FFrame&, void* const)
native function DoorAnimNotify();

// Export UOLHero::execCamcorderAvailableNotify(FFrame&, void* const)
native function CamcorderAvailableNotify();

// Export UOLHero::execCamcorderRaisedNotify(FFrame&, void* const)
native function CamcorderRaisedNotify();

// Export UOLHero::execCamcorderLoweredNotify(FFrame&, void* const)
native function CamcorderLoweredNotify();

// Export UOLHero::execBatteriesReloadedNotify(FFrame&, void* const)
native function BatteriesReloadedNotify();

// Export UOLHero::execOverrideCameraSettingsNotify(FFrame&, void* const)

// Export UOLHero::execDieNotify(FFrame&, void* const)
native function DieNotify();

// Export UOLHero::execDecapitatedNotify(FFrame&, void* const)
native function DecapitatedNotify();

// Export UOLHero::execBloodOnScreenNotify(FFrame&, void* const)
native function BloodOnScreenNotify();

// Export UOLHero::execResetNeckOffsetNotify(FFrame&, void* const)
native function ResetNeckOffsetNotify();

// Export UOLHero::execSetCamcorderVisibleNotify(FFrame&, void* const)
native function SetCamcorderVisibleNotify();

// Export UOLHero::execAttachCameraEffect(FFrame&, void* const)
native function AttachCameraEffect(ParticleSystem ParticleEffectTemplate, float Duration, float PlaneDist);

// Export UOLHero::execIsInLocker(FFrame&, void* const)
native function bool IsInLocker();

// Export UOLHero::execIsBarefeet(FFrame&, void* const)
native function bool IsBarefeet();

// Export UOLHero::execCanBeAttacked(FFrame&, void* const)
native function bool CanBeAttacked();

// Export UOLHero::execCanBeFatalitized(FFrame&, void* const)
native function bool CanBeFatalitized();

// Export UOLHero::execCanBeGrabbedUnder(FFrame&, void* const)
native function bool CanBeGrabbedUnder();

// Export UOLHero::execQuickHeroTest(FFrame&, void* const)
native exec function QuickHeroTest();

// Export UOLHero::execGetFutureDestination(FFrame&, void* const)
native function Vector GetFutureDestination(OLPawn Agent);

// Export UOLHero::execGetGrabUnderDestination(FFrame&, void* const)
native function Vector GetGrabUnderDestination(OLEnemyPawn Enemy);

// Export UOLHero::execRemoveEnemyFromAIPositionPawns(FFrame&, void* const)
native function RemoveEnemyFromAIPositionPawns(OLEnemyPawn EnemyPawn);

function PossessedBy(Controller C, bool bVehicleTransition)
{
}

simulated event PostInitAnimTree(SkeletalMeshComponent SkelComp)
{
}

simulated function DisplayDebug(HUD HUD, out float out_YL, out float out_YPos)
{
}

event TakeDamage(int Damage, Controller InstigatedBy, Vector HitLocation, Vector Momentum, class<DamageType> DamageType, optional TraceHitInfo HitInfo, optional Actor DamageCauser)
{
    NativeTakeDamage(Damage, InstigatedBy, HitLocation, DamageType);
}

event bool HealDamage(int Amount, Controller Healer, class<DamageType> DamageType)
{
}

function TakeFallingDamage()
{
    NativeTakeFallingDamage();
}

// Export UOLHero::execNativePlayLanded(FFrame&, void* const)
native function NativePlayLanded(float ImpactVel);

function PlayLanded(float ImpactVel)
{
}

// Export UOLHero::execOnEnterDeepWater(FFrame&, void* const)
native function OnEnterDeepWater(PhysicsVolume NewVolume);

event PhysicsVolumeChange(PhysicsVolume NewVolume)
{
}

simulated event BecomeViewTarget(PlayerController PC)
{
}

simulated event EndViewTarget(PlayerController PC)
{
}

simulated function SetMeshVisibility(bool bVisible)
{
}

// Export UOLHero::execGetFootstepDecalTransform(FFrame&, void* const)
native function GetFootstepDecalTransform(bool bLeftFoot, out Vector DecalLocation, out Rotator DecalRotation);

function SpawnBloodFootstepDecal(bool bLeftFoot, float Alpha)
{
}

// Export UOLHero::execIsInMainMenu(FFrame&, void* const)
native function bool IsInMainMenu();

event RespawnHero()
{
}

simulated event FellOutOfWorld(class<DamageType> dmgType)
{
}

singular simulated event OutsideWorldBounds()
{
}

function UpdateDifficultyBasedValues()
{
}

defaultproperties
{
    // Object Offset:0x00188AF9
    begin object name=ShadowProxyComponent class=SkeletalMeshComponent
        // Object Offset:0x03B7DA7C
        SkeletalMesh=SkeletalMesh'02_Player.Pawn.Miles_beheaded'
        AnimTreeTemplate=AnimTree'02_Behaviors.Player.Player_AnimTree'
        AnimSets(0)=AnimSet'03_Hero.Hero-01_AS'
        AnimSets(1)=AnimSet'03_OL_ScriptedEvents.Hero_SE'
        MinDistFactorForKinematicUpdate=0.20
        bUpdateKinematicBonesFromAnimation=false
        bOverrideAttachmentOwnerVisibility=true
        bChartDistanceFactor=true
        bCacheAnimSequenceNodes=false
        bNoAnimNotifies=true
        ReplacementPrimitive=none
        LightEnvironment=DynamicLightEnvironmentComponent'Default__OLHero.MyLightEnvironment'
        RBChannel=ERBCollisionChannel.RBCC_Untitled3
        RBDominanceGroup=20
        HiddenGame=true
        bCastHiddenShadow=true
        LightingChannels=(bInitialized=true,Dynamic=true,Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
    End Object
    // Reference: SkeletalMeshComponent'Default__OLHero.ShadowProxyComponent'
    ShadowProxy=ShadowProxyComponent
    begin object name=HeadMeshComp class=StaticMeshComponent
        // Object Offset:0x03CB8962
        StaticMesh=StaticMesh'02_Player.Pawn.Miles_head'
        ShadowParent=SkeletalMeshComponent'Default__OLHero.ShadowProxyComponent'
        ReplacementPrimitive=none
        LightEnvironment=DynamicLightEnvironmentComponent'Default__OLHero.MyLightEnvironment'
        HiddenGame=true
        bCastHiddenShadow=true
        CollideActors=false
        BlockActors=false
        LightingChannels=(bInitialized=true,Dynamic=true,Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
    End Object
    // Reference: StaticMeshComponent'Default__OLHero.HeadMeshComp'
    HeadMesh=HeadMeshComp
    begin object name=CameraMeshComponent class=SkeletalMeshComponent
        // Object Offset:0x03B7D2AD
        SkeletalMesh=SkeletalMesh'01_Animated_Props.handycam'
        MinDistFactorForKinematicUpdate=0.20
        bUpdateSkelWhenNotRendered=false
        bIgnoreControllersWhenNotRendered=true
        bUpdateKinematicBonesFromAnimation=false
        bOverrideAttachmentOwnerVisibility=true
        bChartDistanceFactor=true
        ShadowParent=SkeletalMeshComponent'Default__OLHero.ShadowProxyComponent'
        ReplacementPrimitive=none
        LightEnvironment=DynamicLightEnvironmentComponent'Default__OLHero.MyLightEnvironment'
        RBDominanceGroup=20
        HiddenGame=true
        CastShadow=false
        bUseOnePassLightingOnTranslucency=true
        LightingChannels=(bInitialized=true,Dynamic=true,Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
    End Object
    // Reference: SkeletalMeshComponent'Default__OLHero.CameraMeshComponent'
    CameraMesh=CameraMeshComponent
    begin object name=CameraMeshShadowProxyComponent class=SkeletalMeshComponent
        // Object Offset:0x03B7D6A1
        SkeletalMesh=SkeletalMesh'01_Animated_Props.handycam.handycamShadow'
        MinDistFactorForKinematicUpdate=0.20
        bUpdateSkelWhenNotRendered=false
        bIgnoreControllersWhenNotRendered=true
        bUpdateKinematicBonesFromAnimation=false
        bOverrideAttachmentOwnerVisibility=true
        bChartDistanceFactor=true
        ShadowParent=SkeletalMeshComponent'Default__OLHero.ShadowProxyComponent'
        ReplacementPrimitive=none
        LightEnvironment=DynamicLightEnvironmentComponent'Default__OLHero.MyLightEnvironment'
        RBDominanceGroup=20
        HiddenGame=true
        bUseOnePassLightingOnTranslucency=true
        LightingChannels=(bInitialized=true,Dynamic=true,Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
    End Object
    // Reference: SkeletalMeshComponent'Default__OLHero.CameraMeshShadowProxyComponent'
    CameraMeshShadowProxy=CameraMeshShadowProxyComponent
    begin object name=BloodEffectComponent class=ParticleSystemComponent
        // Object Offset:0x0355F144
        Template=ParticleSystem'VFX_Blood.Particles.Player_Death_blood'
        bAutoActivate=false
        ReplacementPrimitive=none
        DepthPriorityGroup=ESceneDepthPriorityGroup.SDPG_Foreground
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.BloodEffectComponent'
    BloodEffect=BloodEffectComponent
    begin object name=DeathParticlesComponent class=ParticleSystemComponent
        // Object Offset:0x0355F24A
        Template=ParticleSystem'VFX_Blood.Particles.Camera_Blood_splash'
        bAutoActivate=false
        ReplacementPrimitive=none
        DepthPriorityGroup=ESceneDepthPriorityGroup.SDPG_Foreground
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.DeathParticlesComponent'
    DeathParticles=DeathParticlesComponent
    begin object name=DecapitatedEffectComponent class=ParticleSystemComponent
        // Object Offset:0x0355F2DB
        Template=ParticleSystem'VFX_Blood.Particles.PlayerHeadlessBloodLit-01'
        bAutoActivate=false
        ReplacementPrimitive=none
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.DecapitatedEffectComponent'
    DecapitatedBloodEffect=DecapitatedEffectComponent
    begin object name=RainEffectComponent class=ParticleSystemComponent
        // Object Offset:0x0355F344
        Template=ParticleSystem'VFX_Camera.CameraRainDrop-01'
        bAutoActivate=false
        SecondsBeforeInactive=45.0
        ReplacementPrimitive=none
        DepthPriorityGroup=ESceneDepthPriorityGroup.SDPG_Foreground
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.RainEffectComponent'
    RainEffect=RainEffectComponent
    begin object name=WaterFootstepLeftComp class=ParticleSystemComponent
        // Object Offset:0x0355F3F1
        Template=ParticleSystem'VFX_water.Particle.PLAYER_FootStepSplash-01'
        bAutoActivate=false
        ReplacementPrimitive=none
        LightEnvironment=ParticleLightEnvironmentComponent'Default__OLHero.FootstepsLightEnvironment'
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.WaterFootstepLeftComp'
    WaterFootstepParticlesLeft=WaterFootstepLeftComp
    begin object name=WaterFootstepRightComp class=ParticleSystemComponent
        // Object Offset:0x0355F476
        Template=ParticleSystem'VFX_water.Particle.PLAYER_FootStepSplash-01'
        bAutoActivate=false
        ReplacementPrimitive=none
        LightEnvironment=ParticleLightEnvironmentComponent'Default__OLHero.FootstepsLightEnvironment'
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.WaterFootstepRightComp'
    WaterFootstepParticlesRight=WaterFootstepRightComp
    begin object name=WaterSplashParticlesComp class=ParticleSystemComponent
        // Object Offset:0x0355F4FB
        Template=ParticleSystem'VFX_water.Particle.PLAYER_WaterSplash-01'
        bAutoActivate=false
        ReplacementPrimitive=none
        LightEnvironment=ParticleLightEnvironmentComponent'Default__OLHero.FootstepsLightEnvironment'
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.WaterSplashParticlesComp'
    WaterSplashParticles=WaterSplashParticlesComp
    begin object name=CameraEffectComponent class=ParticleSystemComponent
        // Object Offset:0x0355F1D5
        bAutoActivate=false
        ReplacementPrimitive=none
        DepthPriorityGroup=ESceneDepthPriorityGroup.SDPG_Foreground
    End Object
    // Reference: ParticleSystemComponent'Default__OLHero.CameraEffectComponent'
    GenericCameraEffect=CameraEffectComponent
    begin object name=NVLightComponent class=SpotLightComponent
        // Object Offset:0x03B7EAB4
        InnerConeAngle=10.0
        OuterConeAngle=35.0
        Radius=940.0
        LightmassSettings=(LightSourceRadius=32.0)
        Brightness=0.050
        bEnabled=false
        CastShadows=false
        bForceDynamicLight=true
        bPrecomputedLightingIsValid=false
        LightingChannels=(Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
        LightAffectsClassification=ELightAffectsClassification.LAC_DYNAMIC_AND_STATIC_AFFECTING
        LightShadowMode=ELightShadowMode.LightShadow_Normal
    End Object
    // Reference: SpotLightComponent'Default__OLHero.NVLightComponent'
    NVLightPowered=NVLightComponent
    begin object name=NVLightNoBatteriesComponent class=SpotLightComponent
        // Object Offset:0x03B7EE69
        InnerConeAngle=10.0
        OuterConeAngle=35.0
        Radius=300.0
        LightmassSettings=(LightSourceRadius=32.0)
        Brightness=0.020
        bEnabled=false
        CastShadows=false
        bForceDynamicLight=true
        bPrecomputedLightingIsValid=false
        LightingChannels=(Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
        LightAffectsClassification=ELightAffectsClassification.LAC_DYNAMIC_AND_STATIC_AFFECTING
        LightShadowMode=ELightShadowMode.LightShadow_Normal
    End Object
    // Reference: SpotLightComponent'Default__OLHero.NVLightNoBatteriesComponent'
    NVLightDefault=NVLightNoBatteriesComponent
    begin object name=DarkLightComponent class=SpotLightComponent
        // Object Offset:0x03B7E718
        InnerConeAngle=30.0
        OuterConeAngle=60.0
        Radius=100.0
        LightmassSettings=(LightSourceRadius=32.0)
        Brightness=0.010
        CastShadows=false
        bForceDynamicLight=true
        bPrecomputedLightingIsValid=false
        LightingChannels=(Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
        LightAffectsClassification=ELightAffectsClassification.LAC_DYNAMIC_AND_STATIC_AFFECTING
        LightShadowMode=ELightShadowMode.LightShadow_Normal
    End Object
    // Reference: SpotLightComponent'Default__OLHero.DarkLightComponent'
    DarkLight=DarkLightComponent
    begin object name=CamcorderScreenLightComp class=PointLightComponent
        // Object Offset:0x03560188
        Radius=10.0
        FalloffExponent=8.0
        LightmassSettings=(LightSourceRadius=5.0)
        Brightness=0.50
        LightColor=(R=191,G=255,B=198,A=0)
        bPrecomputedLightingIsValid=false
        LightAffectsClassification=ELightAffectsClassification.LAC_DYNAMIC_AND_STATIC_AFFECTING
        LightShadowMode=ELightShadowMode.LightShadow_Normal
    End Object
    // Reference: PointLightComponent'Default__OLHero.CamcorderScreenLightComp'
    CamcorderScreenLight=CamcorderScreenLightComp
    FingerlessMesh=SkeletalMesh'02_Player.Pawn.Miles_beheaded_fingerless'
    ITTechMesh=SkeletalMesh'02_Waylon_Park.Mesh.Waylon_Park_IT'
    PrisonerMesh=SkeletalMesh'02_Waylon_Park.Mesh.Waylon_Park'
    FootstepDecalMatL1=MaterialInstanceConstant'Decals.Blood.FootPrint_L1_mat'
    FootstepDecalMatL2=MaterialInstanceConstant'Decals.Blood.FootPrint_L2_mat'
    FootstepDecalMatR1=MaterialInstanceConstant'Decals.Blood.FootPrint_R1_mat'
    FootstepDecalMatR2=MaterialInstanceConstant'Decals.Blood.FootPrint_R2_mat'
    FootstepBarefeetDecalMatL1=MaterialInstanceConstant'Decals_DLC.Blood.FootPrint-02_L1_mat'
    FootstepBarefeetDecalMatL2=MaterialInstanceConstant'Decals_DLC.Blood.FootPrint-02_L2_mat'
    FootstepBarefeetDecalMatR1=MaterialInstanceConstant'Decals_DLC.Blood.FootPrint-02_R1_mat'
    FootstepBarefeetDecalMatR2=MaterialInstanceConstant'Decals_DLC.Blood.FootPrint-02_R2_mat'
    CameraScreenMat=MaterialInstanceConstant'01_Animated_Props.handycam.CameraScreen_INST'
    CameraScreenParamName=nvOn
    LeftHandBoneName=Hero-L-Hand
    LeftHandAuxBoneName=Hero-L-Hand_aux
    RightHandAuxBoneName=Hero-R-Hand_aux
    OverriddenMinCamcorderFOV=-1.0
    LocomotionModeParams[0]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_UserControlled,MinYaw=0.0,MaxYaw=0.0,MinPitchWS=-84.0,MaxPitchWS=70.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Walking,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[1]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_UserControlled,MinYaw=0.0,MaxYaw=0.0,MinPitchWS=-84.0,MaxPitchWS=70.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Falling,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[2]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_UserControlled,MinYaw=0.0,MaxYaw=0.0,MinPitchWS=-84.0,MaxPitchWS=70.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[3]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Spring,MinYaw=-60.0,MaxYaw=60.0,MinPitchWS=10.0,MaxPitchWS=80.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=15.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=true),NeckOffsetSide=6.0,NeckOffsetFwd=6.0)
    LocomotionModeParams[4]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-85.0,MaxYaw=85.0,MinPitchWS=5.0,MaxPitchWS=80.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=15.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=true),NeckOffsetSide=8.0,NeckOffsetFwd=2.0)
    LocomotionModeParams[5]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-70.0,MaxYaw=70.0,MinPitchWS=-80.0,MaxPitchWS=60.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=5.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=14.0,NeckOffsetFwd=2.0)
    LocomotionModeParams[6]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-85.0,MaxYaw=85.0,MinPitchWS=-15.0,MaxPitchWS=40.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.60,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=5.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=14.0,NeckOffsetFwd=-6.0)
    LocomotionModeParams[7]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-30.0,MaxYaw=30.0,MinPitchWS=-30.0,MaxPitchWS=30.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=5.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[8]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-45.0,MaxYaw=45.0,MinPitchWS=-40.0,MaxPitchWS=40.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=10.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[9]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-180.0,MaxYaw=180.0,MinPitchWS=-80.0,MaxPitchWS=80.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[10]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-95.0,MaxYaw=95.0,MinPitchWS=-15.0,MaxPitchWS=15.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=110.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=5.0,CollisionRadius=20.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=8.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[11]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-10.0,MaxYaw=10.0,MinPitchWS=-15.0,MaxPitchWS=15.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.9999990,FOVOverride=110.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Walking,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[12]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,MinYaw=0.0,MaxYaw=0.0,MinPitchWS=-84.0,MaxPitchWS=70.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=true),NeckOffsetSide=8.0,NeckOffsetFwd=5.0)
    LocomotionModeParams[13]=(GP=(RMM=ERootMotionMode.RMM_Ignore,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-30.0,MaxYaw=30.0,MinPitchWS=-2.0,MaxPitchWS=50.0,MinPitchCS=-84.0,MaxPitchCS=84.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[14]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-30.0,MaxYaw=30.0,MinPitchWS=-84.0,MaxPitchWS=70.0,MinPitchCS=-30.0,MaxPitchCS=30.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=true),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    LocomotionModeParams[15]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-50.0,MaxYaw=50.0,MinPitchWS=-84.0,MaxPitchWS=70.0,MinPitchCS=-60.0,MaxPitchCS=60.0,ViewLimitsApproachCoeff=0.990,FOVOverride=-1.0,DisableCollisions=false,IgnorePawnCollisions=false,CollisionHeight=-1.0,CollisionRadius=-1.0,Physics=EPhysics.PHYS_Custom,BothHandsNeeded=false),NeckOffsetSide=0.0,NeckOffsetFwd=0.0)
    NumAIPositions=64.0
    AIPositionDistance=130.0
    AIPositionLayerBuffer=70.0
    NumAIPositionsPerSidePerPawn=3
    NumAIPositionsToCheckPerFrame=8
    NumAvgVelPoints=10.0
    AvgVelPointLength=1.0
    FirstFingerlessCheckpoint=Male_TortureDone
    ShatteredCameraGlassCheckpoint=Female_LostCam
    ITUniformCheckpoint=DLC_Lab_Start
    PrisonerUniformCheckpoint=Hospital_Start
    NormalWalkSpeed=200.0
    NormalRunSpeed=450.0
    CrouchedSpeed=75.0
    ElectrifiedSpeed=100.0
    WaterWalkSpeed=100.0
    WaterRunSpeed=200.0
    LimpingWalkSpeed=87.2430
    HobblingWalkSpeed=140.0
    HobblingRunSpeed=250.0
    SpeedPenaltyBackwards=0.350
    SpeedPenaltyStrafe=0.20
    ForwardSpeedForJumpWalking=450.0
    ForwardSpeedForJumpRunning=650.0
    JumpClearanceWalking=200.0
    JumpClearanceRunning=300.0
    LandingPenaltyDuration=1.0
    LandingSpeedModifier=0.250
    ElectrifiedJumpDelay=0.250
    ExternalImpulseDecelCoeff=0.970
    ExternalImpulseMinVel=60.0
    ExternalImpulseMaxVel=1500.0
    ExternalImpulseMaxVelCrouched=750.0
    FallSpeedForDamage=1250.0
    FallSpeedForDeath=1500.0
    FallDamageExponent=1.50
    DefaultFOV=90.0
    RunningFOV=100.0
    FOVApproachCoeffOpening=0.970
    FOVApproachCoeffClosing=0.970
    FOVApproachCoeffRun=0.40
    FOVApproachCoeffWalk=0.970
    NrmBatteryDuration=150.0
    HardBatteryDuration=150.0
    CamcorderMinFOV=15.0
    CamcorderMaxFOV=83.0
    CamcorderNVMaxFOV=83.0
    NVLightZoomedInInnerAngle=2.0
    NVLightZoomedInOuterAngle=5.0
    NVLightZoomedInRadius=1500.0
    NVLightZoomedInBrightness=0.0250
    DarkLightBrightnessDefault=0.010
    DarkLightRadiusDefault=100.0
    DarkLightBrightnessNoCamcorder=0.030
    DarkLightRadiusNoCamcorder=175.0
    DarkLightBrightnessBothHandsNeeded=0.030
    DarkLightRadiusBothHandsNeeded=125.0
    DarkLightBrightnessAttacked=0.0250
    DarkLightRadiusAttacked=140.0
    DarkLightBrightnessParrying=0.0150
    DarkLightRadiusParrying=140.0
    NVGlitchTimeThreshold=25.0
    NVGlitchMaxDelayStart=8.0
    NVGlitchMaxDelayEnd=5.0
    NVGlitchMinDuration=0.50
    NVGlitchMaxDuration=3.0
    NVGlitchMaxLevel=0.50
    HealthRegenRate=10.0
    HealthRegenDelay=10.0
    HobbleApproachRate=0.050
    ElectricEffectPeriod=0.40
    ElectricEffectBase=0.40
    ElectricEffectMode=2
    ElectricHurtSoundInterval=0.80
    DeathScreenDuration=7.50
    NumBloodyFootsteps=12
    HeatDamageDist=150.0
    HeatDamageInterval=0.60
    HeatDamagePerSec=15.0
    HeatMaxBlurDist=75.0
    HeatMinBlurDist=250.0
    HeatMinBlurAmount=0.80
    HeatBlurApproachCoeffIn=0.990
    HeatBlurApproachCoeffOut=0.50
    MinCosAngleForPickup=0.980
    PickupInteractRadius=30.0
    JumpForwardFromLedgeWalkXYSpeed=400.0
    JumpForwardFromLedgeWalkZSpeed=350.0
    DropFromLedgeWalkXYSpeed=150.0
    DropFromLedgeWalkZSpeed=300.0
    LookBackCamRotOffset=155.0
    LookBackCamBackOffset=60.0
    LookBackCamSideOffset=20.0
    LeanSpeedThreshold=25.0
    WalkingLoudness=0.30
    CrouchLoudness=0.10
    RunningLoudness=1.0
    WalkingWaterLoudness=0.450
    CrouchWaterLoudness=0.10
    HobblingWalkLoudness=0.40
    HobblingRunLoudness=1.0
    LandingBigLoudness=0.80
    LandingSmallLoudness=0.30
    LandingBigWaterLoudness=1.0
    LandingSmallWaterLoudness=0.50
    DoorOpenInstantLoudness=0.60
    DoorOpenPartialLoudness=0.30
    DoorCloseFastLoudness=0.30
    DoorEnterLockerLoudness=0.20
    DoorExitLockerLoudness=0.20
    DoorRunThroughLoudness=1.0
    MovingNoiseStartTime=1.750
    MovingNoiseClearTime=1.0
    CrouchNoise=Crouch
    WalkingNoise=Walking
    RunningNoise=Running
    DoorMajorNoise=DoorMajor
    MovingNoiseRate=0.0330
    WaterMaterial=Water
    BloodMaterial=Blood
    begin object name=BigLandingWFComp class=ForceFeedbackWaveform
        // Object Offset:0x034AF4DE
        Samples=/* Array type was not detected. */
    End Object
    // Reference: ForceFeedbackWaveform'Default__OLHero.BigLandingWFComp'
    BigLandingFFWaveform=BigLandingWFComp
    begin object name=SmallLandingWFComp class=ForceFeedbackWaveform
        // Object Offset:0x034AF856
        Samples=/* Array type was not detected. */
    End Object
    // Reference: ForceFeedbackWaveform'Default__OLHero.SmallLandingWFComp'
    SmallLandingFFWaveform=SmallLandingWFComp
    begin object name=PickupWFComp class=ForceFeedbackWaveform
        // Object Offset:0x034AF69A
        Samples=/* Array type was not detected. */
    End Object
    // Reference: ForceFeedbackWaveform'Default__OLHero.PickupWFComp'
    PickupFFWaveform=PickupWFComp
    begin object name=DoorWFComp class=ForceFeedbackWaveform
        // Object Offset:0x034AF5BC
        Samples=/* Array type was not detected. */
    End Object
    // Reference: ForceFeedbackWaveform'Default__OLHero.DoorWFComp'
    DoorInteractionFFWaveform=DoorWFComp
    begin object name=RunThroughDoorWFComp class=ForceFeedbackWaveform
        // Object Offset:0x034AF778
        Samples=/* Array type was not detected. */
    End Object
    // Reference: ForceFeedbackWaveform'Default__OLHero.RunThroughDoorWFComp'
    RunThroughDoorFFWaveform=RunThroughDoorWFComp
    FootStepSound_Run=AkEvent'Player_Sound.Footsteps_Run_Miles'
    SndCamStart=AkEvent'Player_Sound.CAM_Start_Using'
    SndCamStop=AkEvent'Player_Sound.CAM_Stop_Using'
    SndCamOnNVOn=AkEvent'Player_Sound.CAM_On_SwitchON_NV'
    SndCamOnNVOff=AkEvent'Player_Sound.CAM_On_SwitchOFF_NV'
    SndCamOffNVOn=AkEvent'Player_Sound.CAM_Off_SwitchON_NV'
    SndCamOffNVOff=AkEvent'Player_Sound.CAM_Off_SwitchOFF_NV'
    SndReloadBatteries=AkEvent'Player_Sound.CAM_Reload_Battery'
    SndPickupDocument=AkEvent'Player_Sound.Pick_Up_Document'
    SndPickupBatteries=AkEvent'Player_Sound.Pick_Up_Battery'
    SndZoomIn=AkEvent'General_Sound.EV_Zoom_IN_Cam'
    SndZoomOut=AkEvent'General_Sound.EV_Zoom_OUT_Cam'
    SndSoldierHit=AkEvent'General_Sound.EV_Soldier_Hit'
    SndDie=AkEvent'VO_Miles.VO_MILES_DIE'
    SndHit=AkEvent'VO_Miles.VO_MILES_HIT_INTENSITY'
    SndHitElectrified=AkEvent'VO_Miles.VO_MILES_HIT_INTENSITY'
    SndStartPeek=AkEvent'VO_Miles.VO_MILES_PEK_INSPI'
    SndStopPeek=AkEvent'VO_Miles.VO_MILES_PEK_EXPI'
    SndStartDamage=AkEvent'Player_Sound.DAMAGES_Health_Play'
    SndStopDamage=AkEvent'Player_Sound.DAMAGES_Health_Stop'
    SndElectricHitStart=AkEvent'SFX.Play_Loop_Electric'
    SndElectricHitStop=AkEvent'SFX.Stop_Loop_Electric'
    SndStartRun=AkEvent'VO_Miles.VO_MILES_RUN_BREATH'
    SndStopRun=AkEvent'VO_Miles.VO_MILES_RUN_STOP'
    SndStartLookBack=AkEvent'SFX.Play_WHOOSH_LOOKBACK'
    SndStopLookBack=AkEvent'SFX.Play_WHOOSH_LOOKFRONT'
    SndSmallLanding=AkEvent'Player_Sound.Landing_Soft_Miles'
    SndBigLanding=AkEvent'Player_Sound.Landing_Strong_Miles'
    SndDieMusicEvent=AkEvent'General_Sound.MUS_MILES_DEATH'
    SndNewObjective=AkEvent'General_Sound.SFX_SetObjectif'
    SndRecordingCompleted=AkEvent'General_Sound.SFX_RecordingMoment_Done'
    SndLowBatteryStart=AkEvent'Player_Sound.CAM_Light_Intensity'
    SndLowBatteryStop=AkEvent'Player_Sound.CAM_Light_Intensity_Stop'
    StateHitIntensityGroup="HIT_Intensity"
    StateHitIntensityLow="HIT_Low"
    StateHitIntensityMed="HIT_Medium"
    StateHitIntensityHigh="HIT_Hight"
    RTPCHealth="Health"
    RTPCZoom="Zoom"
    RTPCBatteryIntensity="Light_Cam_Intensity"
    AnimNameJumpFromWalk=player_jump_from_run
    AnimNameJumpFromRun=player_jump_from_run
    AnimNameJumpOverFromWalk=player_jump_over_from_walk
    AnimNameJumpOverFromRun=player_jump_over_from_run
    AnimNameJumpOverToGrabLedge=player_jump_over_to_ledge
    AnimNameClimbUpFromWalk=player_climb_up_from_walk
    AnimNameClimbUpFromRun=player_climb_up_from_run
    AnimNameClimbUpToCrouch=player_climb_up_from_walk_to_crouch
    AnimNameClimbUpWall150=player_climb_up_wall_1pt5m
    AnimNameClimbUpWall200=player_climb_up_wall_2m
    AnimNameClimbOverWall200=player_climb_over_wall_2m
    AnimNameCrouch=player_stand_to_crouch
    AnimNameUncrouch=player_crouch_to_stand
    AnimNameLedgeHangLeftInside=player_ledge_move_left_90_inside
    AnimNameLedgeHangRightInside=player_ledge_move_right_90_inside
    AnimNameLedgeHangLeftOutside=player_ledge_move_left_90_outside
    AnimNameLedgeHangRightOutside=player_ledge_move_right_90_outside
    AnimNameClimbUpLedgeToCrouch=player_climb_ledge_to_crouch
    AnimNameClimbUpLedgeToStand=player_climb_ledge_to_stand
    AnimNameClimbOverLedgeToFalling=player_ledge_hang_climb_over_to_fall
    AnimNameClimbOverLedgeToStand=player_ledge_hang_climb_over
    AnimNameSlideOverFromRun=player_slide_over_from_run
    AnimNameGrabAndClimb=player_falling_forward_hit_ledge
    AnimNameGrabLedgeFromAir=player_grab_ledge_from_air
    AnimNameGrabLedgeFromWalkHigh=player_jump_to_ledge_from_walk
    AnimNameGrabLedgeFromWalkLow=player_jump_to_ledge_from_walk_2m
    AnimNameLandingSmallStanding=player_landing_small
    AnimNameLandingSmallCrouched=player_crouch_land_small
    AnimNameBigLandingStanding=player_landing_big
    AnimNameBigLandingCrouched=player_crouch_land_big
    AnimNameEnterLedgeWalkInsideLeftPerp=player_ledge_walk_enter_left_inside_perp
    AnimNameEnterLedgeWalkInsideLeftPrl=player_ledge_walk_enter_left_inside_prl
    AnimNameEnterLedgeWalkInsideRightPerp=player_ledge_walk_enter_right_inside_perp
    AnimNameEnterLedgeWalkInsideRightPrl=player_ledge_walk_enter_right_inside_prl
    AnimNameEnterLedgeWalkOutsideLeftPerp=player_ledge_walk_enter_left_outside_perp
    AnimNameEnterLedgeWalkOutsideLeftPrl=player_ledge_walk_enter_left_outside_prl
    AnimNameEnterLedgeWalkOutsideRightPerp=player_ledge_walk_enter_right_outside_perp
    AnimNameEnterLedgeWalkOutsideRightPrl=player_ledge_walk_enter_right_outside_prl
    AnimNameLedgeWalkTransitionLeftInside=player_ledge_walk_transition_left_90_inside
    AnimNameLedgeWalkTransitionLeftOutside=player_ledge_walk_transition_left_90_outside
    AnimNameLedgeWalkTransitionRightInside=player_ledge_walk_transition_right_90_inside
    AnimNameLedgeWalkTransitionRightOutside=player_ledge_walk_transition_right_90_outside
    AnimNameExitLedgeWalkRightInside=player_ledge_walk_exit_right_inside_left
    AnimNameExitLedgeWalkLeftInside=player_ledge_walk_exit_left_inside_right
    AnimNameExitLedgeWalkRightOutside=player_ledge_walk_exit_right_outside_right
    AnimNameExitLedgeWalkLeftOutside=player_ledge_walk_exit_left_outside_left
    AnimNameJumpFromLedgeWalk=player_jump_from_ledge_walk
    AnimNameStepOffFromLedgeWalk=player_ledge_walk_stepoff
    AnimNameEnterSqueezeLeft=player_squeeze_enter_left
    AnimNameEnterSqueezeRight=player_squeeze_enter_right
    AnimNameExitSqueezeLeft=player_squeeze_exit_left
    AnimNameExitSqueezeRight=player_squeeze_exit_right
    AnimNameAutomaticSqueeze=player_squeeze_through
    AnimNameEnterLadderGroundStraight=player_ladder_grab_straight
    AnimNameEnterLadderGround45Left=player_ladder_grab_45l
    AnimNameEnterLadderGround45Right=player_ladder_grab_45r
    AnimNameExitLadderOnTopLH=player_ladder_exit_lh
    AnimNameExitLadderOnTopRH=player_ladder_exit_rh
    AnimNamePickupObject_h40v70=player_object_pickup_h40v70
    AnimNamePickupObject_h40v140=player_object_pickup_h40v140
    AnimNamePickupObject_h85v70=player_object_pickup_h85v70
    AnimNamePickupObject_h85v140=player_object_pickup_h85v140
    AnimNamePickupObject_h62v105=player_object_pickup_h62v105
    AnimNamePickupObjectCrouched_h30vm10=player_crouch_object_pickup_h30v-10
    AnimNamePickupObjectCrouched_h60vm10=player_crouch_object_pickup_h60v-10
    AnimNamePickupObjectCrouched_h45v35=player_crouch_object_pickup_h45v35
    AnimNamePickupObjectCrouched_h30v60=player_crouch_object_pickup_h30v60
    AnimNamePickupObjectCrouched_h60v60=player_crouch_object_pickup_h60v60
    AnimNamePickupDoc_h40v70=player_doc_pickup_h40v70
    AnimNamePickupDoc_h40v140=player_doc_pickup_h40v140
    AnimNamePickupDoc_h85v70=player_doc_pickup_h85v70
    AnimNamePickupDoc_h85v140=player_doc_pickup_h85v140
    AnimNamePickupDoc_h62v105=player_doc_pickup_h62v105
    AnimNamePickupDocCrouched_h30vm10=player_crouch_doc_pickup_h30v-10
    AnimNamePickupDocCrouched_h60vm10=player_crouch_doc_pickup_h60v-10
    AnimNamePickupDocCrouched_h45v35=player_crouch_doc_pickup_h45v35
    AnimNamePickupDocCrouched_h30v60=player_crouch_doc_pickup_h30v60
    AnimNamePickupDocCrouched_h60v60=player_crouch_doc_pickup_h60v60
    AnimNamePutdownObject=player_object_putdown
    AnimNameCloseDoorLeftFront=player_door_close_left_front
    AnimNameCloseDoorLeftSide=player_door_close_left_side
    AnimNameCloseDoorLeftBack=player_door_close_left_back
    AnimNameCloseDoorLeftInside=player_door_close_inside_left
    AnimNameCloseDoorRightFront=player_door_close_right_front
    AnimNameCloseDoorRightSide=player_door_close_right_side
    AnimNameCloseDoorRightBack=player_door_close_right_back
    AnimNameCloseDoorRightInside=player_door_close_inside_right
    AnimNameCloseDoorLeftFrontSlow=player_door_close_left_front_slow
    AnimNameCloseDoorLeftSideSlow=player_door_close_left_side_slow
    AnimNameCloseDoorLeftBackSlow=player_door_close_left_back_slow
    AnimNameCloseDoorLeftInsideSlow=player_door_close_inside_left_slow
    AnimNameCloseDoorRightFrontSlow=player_door_close_right_front_slow
    AnimNameCloseDoorRightSideSlow=player_door_close_right_side_slow
    AnimNameCloseDoorRightBackSlow=player_door_close_right_back_slow
    AnimNameCloseDoorRightInsideSlow=player_door_close_inside_right_slow
    AnimNameDoorOpenPullLeft=player_door_open_pull_left
    AnimNameDoorOpenPullRight=player_door_open_pull_right
    AnimNameDoorOpenPushLeft=player_door_open_push_left
    AnimNameDoorOpenPushRight=player_door_open_push_right
    AnimNameDoorRunThroughLeft=player_run_door_open_left
    AnimNameDoorRunThroughRight=player_run_door_open_right
    AnimNameDoorOpenInsidePushLeft=player_door_open_inside_left
    AnimNameDoorOpenInsidePushRight=player_door_open_inside_right
    AnimNameDoorAccessLeft=player_door_access_left
    AnimNameDoorAccessRight=player_door_access_right
    AnimNameDoorAccessLeftPull15=player_door_access_left_pull_15
    AnimNameDoorAccessRightPull15=player_door_access_right_pull_15
    AnimNameDoorAccessLeftPush15=player_door_access_left_push_15
    AnimNameDoorAccessRightPush15=player_door_access_right_push_15
    AnimNameDoorLockedLeft=player_door_locked_left
    AnimNameDoorLockedRight=player_door_locked_right
    AnimNameLockerOpenStraight=player_locker_open_straight
    AnimNameLockerOpen45Left=player_locker_open_left_45
    AnimNameLockerOpen45Right=player_locker_open_right_45
    AnimNameHideInLocker=player_locker_hide
    AnimNameGrabFromSqueezeLeftFacing=player_squeeze_fail_left_front
    AnimNameGrabFromSqueezeLeftBack=player_squeeze_fail_left_back
    AnimNameGrabFromSqueezeRightFacing=player_squeeze_fail_right_front
    AnimNameGrabFromSqueezeRightBack=player_squeeze_fail_right_back
    AnimNameGrabFromSqueezePhase1Right0=player_squeeze_fail_right_phase1
    AnimNameGrabFromSqueezePhase1Right90=player_squeeze_fail_right_phase1_90
    AnimNameGrabFromSqueezePhase1Right180=player_squeeze_fail_right_phase1_180
    AnimNameGrabFromSqueezePhase1Left0=player_squeeze_fail_left_phase1
    AnimNameGrabFromSqueezePhase1Left90=player_squeeze_fail_left_phase1_90
    AnimNameGrabFromSqueezePhase1Left180=player_squeeze_fail_left_phase1_180
    AnimNameEnterBedLeft=player_enter_bed_left
    AnimNameEnterBedRight=player_enter_bed_right
    AnimNameEnterBedLeftFromStand=player_enter_bed_left_stand
    AnimNameEnterBedRightFromStand=player_enter_bed_right_stand
    AnimNameExitBedLeft=player_exit_bed_left
    AnimNameExitBedRight=player_exit_bed_right
    AnimNameExitBedLeftToCrouch=player_exit_bed_left_crouch
    AnimNameExitBedRightToCrouch=player_exit_bed_right_crouch
    AnimNameEnterPushObjectLeft=player_push_object_enter_left
    AnimNameEnterPushObjectRight=player_push_object_enter_right
    AnimNameExitPushObjectLeft=player_push_object_exit_left
    AnimNameExitPushObjectRight=player_push_object_exit_right
    AnimNameRaiseCamcorder=player_camcorder_raise
    AnimNameLowerCamcorder=player_camcorder_lower
    AnimNameRaiseCamcorderBed=player_bed_camcorder_raise
    AnimNameLowerCamcorderBed=player_bed_camcorder_lower
    AnimNameRaiseCamcorderCrouched=player_crouch_camcorder_raise
    AnimNameLowerCamcorderCrouched=player_crouch_camcorder_lower
    AnimNameReloadBatteries=player_camcorder_reload
    AnimNameReloadBatteriesInactive=player_camcorder_reload_inactive
    AnimNameReloadBatteriesCrouched=player_crouch_camcorder_reload
    AnimNameReloadBatteriesCrouchedInactive=player_crouch_camcorder_reload_inactive
    AnimNameReloadBatteriesBed=player_bed_camcorder_reload
    AnimNameReloadBatteriesBedInactive=player_bed_camcorder_reload_inactive
    AnimNameReloadBatteriesSqueeze=player_squeeze_camera_reload
    AnimNameReloadBatteriesSqueezeInactive=player_squeeze_camera_reload_inactive
    AnimNameGrabNormal=player_grab
    AnimNameGrabNormalLeft90=player_grab_left_90
    AnimNameGrabNormalLeft180=player_grab_left_180
    AnimNameGrabNormalRight90=player_grab_right_90
    AnimNameGrabNormalRight180=player_grab_right_180
    AnimNameGrabCrouched=player_crouch_grab
    AnimNameGrabCrouchedLeft90=player_crouch_grab_left_90
    AnimNameGrabCrouchedLeft180=player_crouch_grab_left_180
    AnimNameGrabCrouchedRight90=player_crouch_grab_right_90
    AnimNameGrabCrouchedRight180=player_crouch_grab_right_180
    AnimNameGrabUnder=player_grab_reach_under
    AnimNameGrabUnderCCW=player_grab_reach_under_ccw
    AnimNameGrabUnderLeft90=player_grab_reach_under_left_90
    AnimNameGrabUnderLeft180=player_grab_reach_under_left_180
    AnimNameGrabUnderRight90=player_grab_reach_under_right_90
    AnimNameGrabUnderRight180=player_grab_reach_under_right_180
    AnimNameGrabFromBedLeft=player_grab_bed_left
    AnimNameGrabFromBedRight=player_grab_bed_right
    AnimNameGrabFromLocker=player_locker_grab
    AnimNameThrown=player_grab_throw
    AnimNameThrownLeft90=player_grab_throw_left_90
    AnimNameThrownLeft180=player_grab_throw_left_180
    AnimNameThrownRight90=player_grab_throw_right_90
    AnimNameThrownRight180=player_grab_throw_right_180
    AnimNameHitReactionFwd=player_hit_forward
    AnimNameHitReactionBwd=player_hit_backward
    AnimNameHitReactionLeft=player_hit_left
    AnimNameHitReactionRight=player_hit_right
    AnimNameHitReactionCrouchedFwd=player_crouch_hit_forward
    AnimNameHitReactionCrouchedBwd=player_crouch_hit_backward
    AnimNameHitReactionCrouchedLeft=player_crouch_hit_left
    AnimNameHitReactionCrouchedRight=player_crouch_hit_right
    AnimNameWallContactLeftHard=player_wall_contact_from_left_h
    AnimNameWallContactLeftSoft=player_wall_contact_from_left_s
    AnimNameWallContactRightHard=player_wall_contact_from_right_h
    AnimNameWallContactRightSoft=player_wall_contact_from_right_s
    AnimNameEnterCornerPeekLeftHard=player_wall_to_peek_from_left_h
    AnimNameEnterCornerPeekLeftSoft=player_wall_to_peek_from_left_s
    AnimNameEnterCornerPeekRightHard=player_wall_to_peek_from_right_h
    AnimNameEnterCornerPeekRightSoft=player_wall_to_peek_from_right_s
    AnimNameExitCornerPeekLeftHard=player_wall_leave_peek_from_left_h
    AnimNameExitCornerPeekLeftSoft=player_wall_leave_peek_from_left_s
    AnimNameExitCornerPeekRightHard=player_wall_leave_peek_from_right_h
    AnimNameExitCornerPeekRightSoft=player_wall_leave_peek_from_right_s
    AnimNameExitCornerPeekForwardLeftHard=player_wall_exit_from_left_h
    AnimNameExitCornerPeekForwardLeftSoft=player_wall_exit_from_left_s
    AnimNameExitCornerPeekForwardRightHard=player_wall_exit_from_right_h
    AnimNameExitCornerPeekForwardRightSoft=player_wall_exit_from_right_s
    AnimNameCornerTransitionFromLeft=player_wall_transition_from_left
    AnimNameCornerTransitionFromRight=player_wall_transition_from_right
    AnimNameGenericGrabFromBedLeft=player_generic_grab_bed_left
    AnimNameGenericGrabFromBedRight=player_generic_grab_bed_right
    AnimNameGenericGrabFromLocker=player_generic_locker_grab
    AnimNameGenericGrabUnder=player_generic_grab_reach_under
    AnimNameGenericGrabUnderLeft90=player_generic_grab_reach_under_left_90
    AnimNameGenericGrabUnderLeft180=player_generic_grab_reach_under_left_180
    AnimNameGenericGrabUnderRight90=player_generic_grab_reach_under_right_90
    AnimNameGenericGrabUnderRight180=player_generic_grab_reach_under_right_180
    AnimNamePushawayLeft=player_pushaway_left
    AnimNamePushawayRight=player_pushaway_right
    AnimNameGenericDeath=player_stand_death
    AnimNameFatalityBackstabBack=player_fatality_backstab_back
    AnimNameFatalityBackstabLeft=player_fatality_backstab_left
    AnimNameFatalityBackstabRight=player_fatality_backstab_right
    AnimNameFatalityChokeFront=player_fatality_choke_front
    AnimNameFatalityChokeLeft=player_fatality_choke_left
    AnimNameFatalityChokeRight=player_fatality_choke_right
    AnimNameFatalityClubBack=player_fatality_clubbin_back
    AnimNameFatalityClubFront=player_fatality_clubbin_front
    AnimNameFatalityClubLeft=player_fatality_clubbin_left
    AnimNameFatalityClubRight=player_fatality_clubbin_right
    AnimNameFatalityStabChopFront=player_fatality_stabbychop_front
    AnimNameFatalityStabChopLeft=player_fatality_stabbychop_left
    AnimNameFatalityStabChopRight=player_fatality_stabbychop_right
    AnimNameFatalityXplodeBack=player_fatality_xplod_back
    AnimNameFatalityXplodeFront=player_fatality_xplod_forward
    AnimNameFatalityXplodeLeft=player_fatality_xplod_left
    AnimNameFatalityXplodeRight=player_fatality_xplod_right
    AnimNameFatalityLocker=player_fatality_swarm_locker
    AnimNameFatalitySoldier=player_grab_fatality
    AnimNameFatalityGroom=player_grab_fatality_groom
    ObstacleMinZWalking=50.0
    ObstacleMaxZWalking=245.0
    ObstacleMaxZFalling=50.0
    MinCosAngleToObstacle=0.7070
    MaxLedgeCosAngle=0.7070
    MinWidthForClimbWalking=75.0
    MinWidthForClimbRunning=100.0
    MinWidthForClimbUpWall=45.0
    MinWidthForSlide=75.0
    MaxWidthForSlide=175.0
    MinHeightForSlide=85.0
    MaxHeightForSlide=130.0
    StepUpAndLandInteractDist=40.0
    JumpOverInteractDistWalking=150.0
    JumpOverInteractDistRunning=300.0
    JumpOverInteractDistFalling=50.0
    JumpOverMinObstacleZ=50.0
    JumpOverExpectedDistWalking=40.0
    JumpOverExpectedHeightWalking=100.0
    JumpOverExpectedDistRunning=100.0
    JumpOverExpectedHeightRunning=100.0
    JumpOverAndGrabLedgeInteractDistWalking=150.0
    JumpOverAndGrabLedgeInteractDistRunning=300.0
    JumpOverAndGrabLedgeInteractDistFalling=50.0
    JumpOverAndGrabLedgeExpectedDist=30.0
    JumpOverAndGrabLedgeExpectedHeightFromLedge=100.0
    SlideOverInteractDistMin=50.0
    SlideOverInteractDistMax=300.0
    SlideOverExpectedDist=117.70
    SlideOverExpectedHeight=85.0
    ClimbUpInteractDistWalking=150.0
    ClimbUpInteractDistRunning=300.0
    ClimbUpInteractDistFalling=50.0
    ClimbUpWallInteractHeightMin=145.0
    ClimbUpExpectedDistWalking=44.480
    ClimbUpExpectedHeightWalking=85.0
    ClimbUpExpectedDistRunning=75.0
    ClimbUpExpectedHeightRunning=85.0
    ClimbUpWallExpectedDist=40.0
    ClimbUpWallExpectedHeightMin=150.0
    ClimbUpWallExpectedHeightMax=200.0
    ClimbOverWallExpectedDist=40.0
    ClimbOverWallExpectedHeight=200.0
    ClimbUpToCrouchExpectedDist=42.0
    ClimbUpToCrouchExpectedHeight=160.0
    ClimbUpToCrouchMinHeight=145.0
    GrabLedgeInteractDistWalking=150.0
    GrabLedgeInteractDistRunning=300.0
    GrabLedgeMinHeightOnGround=205.0
    GrabLedgeMaxHeightOnGround=325.0
    GrabLedgeMinFloorClearance=200.0
    GrabLedgeFromJumpOverMinFloorClearance=240.0
    GrabLedgeMinHeightInAir=150.0
    GrabLedgeMaxHeightInAir=250.0
    GrabLedgeInteractDistGoingDown=70.0
    GrabLedgeMinHeightInAirGoingDown=130.0
    GrabLedgeMaxHeightInAirGoingDown=200.0
    GrabLedgeFromGroundExpectedHeight=192.50
    GrabLedgeFromAirExpectedHeight=75.0
    GrabAndClimbInteractDist=70.0
    GrabAndClimbExpectedDistFwd=40.0
    GrabAndClimbExpectedDistHeight=115.60
    GrabAndClimbMinHeight=110.0
    GrabAndClimbMaxHeight=130.0
    LedgeHangDistToWall=45.0
    LedgeHangHeightToLedge=107.50
    LedgeHangTransitionInteractDist=40.0
    LedgeHangTransitionInsideExpectedDist=46.250
    LedgeHangTransitionOutsideExpectedDist=39.0
    LedgeHangClimbOverMaxLedgeWidth=85.0
    LedgeHangClimbOverMinHeightClearance=25.0
    LedgeHangClimbOverFullHeightClearance=100.0
    LedgeHangClimbUpMinFwdClearance=40.0
    LedgeWalkTransitionInteractDistInside=46.50
    LedgeWalkTransitionInteractDistOutside=66.20
    LedgeWalkTransitionInteractDistExit=46.50
    LedgeWalkEnterExpectedInsidePerpSideDist=33.180
    LedgeWalkEnterExpectedOutsidePerpSideDist=36.510
    LedgeWalkEnterExpectedInsidePrlSideDist=7.50
    LedgeWalkEnterExpectedOutsidePrlSideDist=33.180
    LedgeWalkEnterExpectedInsidePerpFwdDist=18.90
    LedgeWalkEnterExpectedOutsidePerpFwdDist=56.980
    LedgeWalkEnterExpectedInsidePrlFwdDist=56.980
    LedgeWalkEnterExpectedOutsidePrlFwdDist=47.910
    LedgeWalkTransitionExpectedDistInside=6.160
    LedgeWalkTransitionExpectedDistOutside=66.160
    LedgeWalkDistFromEdge=16.050
    LedgeWalkMaxWallDist=35.0
    LedgeWalkMinDrop=25.0
    SqueezeInteractDist=80.0
    SqueezeEnterExpectedDistFwd=40.0
    SqueezeExitExpectedDistFwd=37.0
    EnterLockerInteractDistance=120.0
    LadderEnterFromGroundInteractDist=100.0
    LadderEnterFromAboveInteractDist=65.0
    LadderGrabDist=75.0
    LadderEnterFromGroundDeltaZ=18.30
    LadderBarSpacing=25.0
    LadderRootHeightOffsetFromBar=17.0
    LadderEnterFromAboveExpectedDist=37.60
    LadderDistFwd=52.50
    LadderExitOnTopInteractDist=183.0
    LadderExitOnGroundInteractDist=10.0
    LadderMaxHeightForDrop=250.0
    PickupObjectExpectedDist=60.0
    PickupObjectInteractDistMinHorz=15.0
    PickupObjectInteractDistMaxHorz=100.0
    PickupObjectInteractDistMinVertStanding=60.0
    PickupObjectInteractDistMaxVertStanding=160.0
    PickupObjectInteractDistMinVertCrouched=-10.0
    PickupObjectInteractDistMaxVertCrouched=60.0
    DoorOpenInteractionDist=200.0
    DoorOpenExpectedFwdDist=53.20
    DoorOpenExpectedSideDist=44.0
    DoorOpenInsideExpectedDistFwd=40.0
    DoorRunThroughInteractDist=120.0
    DoorRunThroughExpectedDist=100.0
    DoorInteractiveOpenMaxAngle=90.0
    DoorMaxAngleForInteractiveOpen=16.0
    DoorCloseInteractionDist=200.0
    DoorCloseExpectedDistFwd=67.40
    LockerOpenStraightExpectedDistSide=28.50
    LockerOpenLeftExpectedDistSide=85.30
    LockerOpenRightExpectedDistSide=-28.50
    LockerOpenExpectedDistFwd=63.90
    LockerEnterExpectedDistSide=28.50
    LockerEnterExpectedDistFwd=63.90
    GrabFromSqueezeMaxDistance=100.0
    GrabFromSqueezeExpectedDistance=75.0
    BedInteractDistance=180.0
    BedEnterExpectedFwdDist=43.10
    BedEnterExpectedSideDist=105.0
    PushableInteractDist=150.0
    PushableInteractMinLookCosAngle=0.710
    PushableExpectedDistFromEdge=35.0
    PushableExpectedSideOffset=10.0
    PushFromLedgeAnimatedExpectedDist=20.0
    PushFromLedgeAnimatedInteractDist=20.0
    PushFromLedgeAnimatedMinHeight=120.0
    PushFromLedgeProceduralInteractDist=5.0
    PeekingEnterInteractDistFromWall=120.0
    PeekingEnterInteractDistFromEdgeMin=5.0
    PeekingEnterInteractDistFromEdgeMax=125.0
    PeekingEnterExpectedDistFromWall=35.0
    PeekingEnterExpectedDistFromEdgeLeft=30.0
    PeekingEnterExpectedDistFromEdgeRight=24.0
    ImpactVelThresholdForBigLanding=1125.0
    ImpactVelThresholdForSmallLanding=350.0
    ImpactVelThresholdForSpeedPenalty=700.0
    MinEyeDistToWall=15.0
    ForwardJumpSpeedThreshold=100.0
    MaxGrabLedgeAdjustment=125.0
    MaxSpeedPenaltyPctForInjuries=0.10
    DefaultLeftHandJointTargetRotation=(X=100.0,Y=-100.0,Z=130.0)
    CornerPeekJointTargetPosLeft=(X=100.0,Y=-30.0,Z=150.0)
    CornerPeekJointTargetPosRight=(X=100.0,Y=-30.0,Z=50.0)
    SpecialMoveParams[1]=(GP=(MaxPitchWS=75.0,Physics=EPhysics.PHYS_Walking),bAlwaysInterruptible=true,PlayerInputEnabled=true,KeepLocomotionMode=true)
    SpecialMoveParams[2]=(GP=(MaxPitchWS=75.0,Physics=EPhysics.PHYS_Walking),bAlwaysInterruptible=true,PlayerInputEnabled=true,KeepLocomotionMode=true)
    SpecialMoveParams[3]=(GP=(RMM=ERootMotionMode.RMM_Accel,MinPitchWS=-55.0),AnimName=player_jump_on_spot,PlayerInputEnabled=true)
    SpecialMoveParams[4]=(GP=(CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0))
    SpecialMoveParams[5]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=-30.0,MaxPitchCS=30.0,CollisionHeight=37.50,CollisionRadius=15.0),bExitOnBlendOut=true,bPlayAnimWhenPositioned=true,bCollisionChangeOnTrigger=true,AdjustPosition=true,AdjustOrientation=true,bUsePawnVelocityForPositionning=true,PositionningLinearVelocity=250.0)
    SpecialMoveParams[6]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,DisableCollisions=true,CollisionHeight=37.50,CollisionRadius=15.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_LedgeHang,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[7]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=30.0,CollisionHeight=37.50),bExitOnBlendOut=true,bPlayAnimWhenPositioned=true,bCollisionChangeOnTrigger=true,AdjustPosition=true,bUsePawnVelocityForPositionning=true,PositionningLinearVelocity=250.0)
    SpecialMoveParams[8]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-40.0,MaxYaw=40.0,MinPitchCS=-30.0,MaxPitchCS=30.0,CollisionHeight=27.50),bExitOnBlendOut=true,bPlayAnimWhenPositioned=true,bCollisionChangeOnTrigger=true,AdjustPosition=true,AdjustOrientation=true,bUsePawnVelocityForPositionning=true,PositionningLinearVelocity=250.0)
    SpecialMoveParams[9]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-40.0,MaxYaw=40.0,MinPitchCS=-30.0,MaxPitchCS=60.0,CollisionHeight=27.50,BothHandsNeeded=true),bExitOnBlendOut=true,bPlayAnimWhenPositioned=true,bCollisionChangeOnTrigger=true,AdjustPosition=true,AdjustOrientation=true,bUsePawnVelocityForPositionning=true,PositionningLinearVelocity=250.0)
    SpecialMoveParams[10]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=-30.0,MaxPitchCS=30.0,CollisionHeight=37.50,CollisionRadius=15.0,BothHandsNeeded=true),bExitOnBlendOut=true,bPlayAnimWhenPositioned=true,AdjustPosition=true,AdjustOrientation=true,bUsePawnVelocityForPositionning=true,PositionningLinearVelocity=250.0)
    SpecialMoveParams[11]=(bNoAnim=true)
    SpecialMoveParams[12]=(GP=(CameraMode=CameraRotationMode.CRM_Limited),NextLocomotionMode=ELocomotionMode.LM_LookBack,bNoAnim=true,PlayerInputEnabled=true)
    SpecialMoveParams[13]=(GP=(CameraMode=CameraRotationMode.CRM_Limited),bNoAnim=true,PlayerInputEnabled=true)
    SpecialMoveParams[14]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,DisableCollisions=true,CollisionHeight=15.0,CollisionRadius=15.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_LedgeHang,bPlayAnimWhenPositioned=true,bInterruptibleAfterTrigger=true,AdjustPosition=true,AdjustOrientation=true,bUsePawnVelocityForPositionning=true)
    SpecialMoveParams[15]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,CollisionHeight=15.0,CollisionRadius=15.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_LedgeHang,bInterruptibleAfterTrigger=true,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[16]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-60.0,MaxYaw=60.0,MinPitchWS=-10.0,MaxPitchWS=50.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_LedgeHang,AdjustPosition=true)
    SpecialMoveParams[17]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0,CollisionHeight=12.0,CollisionRadius=15.0,BothHandsNeeded=true),bExitOnBlendOut=true,AdjustPosition=true)
    SpecialMoveParams[18]=(GP=(Physics=EPhysics.PHYS_Falling,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_Fall,AnimName=player_ledge_walk_stepoff,bExitOnBlendOut=true)
    SpecialMoveParams[19]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,CollisionRadius=15.0,BothHandsNeeded=true),bExitOnBlendOut=true,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[20]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-30.0,MaxYaw=30.0,MinPitchWS=-60.0,MaxPitchWS=60.0,CollisionRadius=5.0),NextLocomotionMode=ELocomotionMode.LM_LedgeWalk,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[21]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-20.0,MaxYaw=20.0,MinPitchWS=-60.0,MaxPitchWS=60.0,ViewLimitsApproachCoeff=0.90,CollisionRadius=5.0))
    SpecialMoveParams[22]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-40.0,MaxYaw=40.0,MinPitchWS=-50.0,MaxPitchWS=60.0),NextLocomotionMode=ELocomotionMode.LM_LedgeWalk,AdjustPosition=true)
    SpecialMoveParams[23]=(GP=(RMM=ERootMotionMode.RMM_Accel,Physics=EPhysics.PHYS_Falling),NextLocomotionMode=ELocomotionMode.LM_Fall,PlayerInputEnabled=true)
    SpecialMoveParams[24]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchWS=-30.0,MaxPitchWS=30.0,CollisionRadius=2.0),NextLocomotionMode=ELocomotionMode.LM_Squeeze,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[25]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchWS=-15.0,MaxPitchWS=45.0,CollisionRadius=2.0),bTargettedYawSmoothing=true,AdjustPosition=true,PositionningLinearVelocity=100.0)
    SpecialMoveParams[26]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-25.0,MaxYaw=25.0,MinPitchWS=-20.0,MaxPitchWS=30.0,CollisionRadius=2.0),AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[27]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchWS=0.0,MaxPitchWS=40.0,CollisionRadius=2.0),KeepLocomotionMode=true)
    SpecialMoveParams[28]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,CollisionRadius=15.0),NextLocomotionMode=ELocomotionMode.LM_Door,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[29]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0),AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[30]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0),AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[31]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0),AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[32]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0),bExitOnBlendOut=true,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[33]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0),AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[34]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0),bPlayAnimWhenPositioned=true,AdjustPosition=true,AdjustOrientation=true,PositionningLinearVelocity=450.0,PositionningAngularVelocity=400.0)
    SpecialMoveParams[35]=(GP=(CameraMode=CameraRotationMode.CRM_FullyAnimated,DisableCollisions=true,CollisionRadius=5.0),bNoAnim=true)
    SpecialMoveParams[36]=(GP=(CameraMode=CameraRotationMode.CRM_FullyAnimated,CollisionRadius=5.0),bNoAnim=true,PositionningLinearVelocity=500.0)
    SpecialMoveParams[37]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchCS=-15.0,MaxPitchCS=15.0,CollisionRadius=5.0),AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[38]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,DisableCollisions=true,CollisionRadius=5.0),NextLocomotionMode=ELocomotionMode.LM_Locker,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[39]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,CollisionRadius=5.0),AnimName=player_locker_exit,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[40]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,FOVOverride=110.0,DisableCollisions=true,CollisionHeight=5.0,CollisionRadius=20.0),NextLocomotionMode=ELocomotionMode.LM_Bed,bExitOnBlendOut=true,AdjustPosition=true,AdjustOrientation=true,PositionningLinearVelocity=100.0)
    SpecialMoveParams[41]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-5.0,MaxYaw=5.0,MinPitchCS=0.0,MaxPitchCS=0.0,DisableCollisions=true,CollisionHeight=5.0,CollisionRadius=20.0),AdjustPosition=true,AdjustOrientation=true,PositionningLinearVelocity=10.0)
    SpecialMoveParams[42]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchWS=-15.0,MaxPitchWS=15.0,CollisionHeight=5.0,CollisionRadius=20.0),KeepLocomotionMode=true)
    SpecialMoveParams[43]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchWS=10.0,MaxPitchWS=60.0,CollisionRadius=15.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_Ladder,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[44]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,DisableCollisions=true,CollisionRadius=15.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_Ladder,AnimName=player_ladder_enter_above,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[45]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-60.0,MaxYaw=60.0,MinPitchWS=-30.0,MaxPitchWS=30.0,CollisionRadius=15.0,BothHandsNeeded=true),bNoAnim=true,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[46]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchWS=-10.0,MaxPitchWS=30.0,CollisionRadius=5.0,BothHandsNeeded=true))
    SpecialMoveParams[47]=(GP=(CollisionRadius=15.0,Physics=EPhysics.PHYS_Falling,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_Fall,bNoAnim=true)
    SpecialMoveParams[48]=(GP=(CameraMode=CameraRotationMode.CRM_FullyAnimated,MinYaw=-15.0,MaxYaw=15.0,MinPitchWS=10.0,MaxPitchWS=80.0,CollisionRadius=15.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_Ladder,AnimName=player_ladder_grab_from_air,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[49]=(GP=(CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchCS=-15.0,MaxPitchCS=15.0,CollisionRadius=15.0),AdjustOrientation=true,PositionningAngularVelocity=60.0)
    SpecialMoveParams[50]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Locked,MinPitchCS=0.0,MaxPitchCS=0.0,CollisionRadius=15.0),KeepLocomotionMode=true,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[51]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_Struggle,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[52]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,BothHandsNeeded=true),bExitOnBlendOut=true)
    SpecialMoveParams[53]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,BothHandsNeeded=true))
    SpecialMoveParams[54]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchCS=-15.0,MaxPitchCS=15.0,CollisionRadius=15.0,BothHandsNeeded=true),NextLocomotionMode=ELocomotionMode.LM_Pushing,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[55]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-30.0,MaxYaw=30.0,MinPitchCS=-30.0,MaxPitchCS=30.0,BothHandsNeeded=true),bExitOnBlendOut=true)
    SpecialMoveParams[56]=(GP=(RMM=ERootMotionMode.RMM_Accel,CollisionHeight=27.50),NextLocomotionMode=ELocomotionMode.LM_Fall,bNoAnim=true)
    SpecialMoveParams[57]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-30.0,MaxYaw=30.0,CollisionHeight=27.50),NextLocomotionMode=ELocomotionMode.LM_Fall,AnimName=player_crouch_over_ledge,bExitOnBlendOut=true,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[58]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchCS=-15.0,MaxPitchCS=15.0),NextLocomotionMode=ELocomotionMode.LM_ContextualLean,bNoAnim=true,AdjustPosition=true,AdjustOrientation=true,PositionningLinearVelocity=125.0)
    SpecialMoveParams[59]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchCS=-15.0,MaxPitchCS=15.0),bNoAnim=true)
    SpecialMoveParams[60]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinYaw=-15.0,MaxYaw=15.0,MinPitchCS=-15.0,MaxPitchCS=15.0),bExitOnBlendOut=true)
    SpecialMoveParams[61]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=-15.0,MaxPitchCS=15.0,CollisionRadius=5.0),NextLocomotionMode=ELocomotionMode.LM_ContextualLean)
    SpecialMoveParams[62]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0,IgnorePawnCollisions=true),NextLocomotionMode=ELocomotionMode.LM_Grabbed,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[63]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,IgnorePawnCollisions=true,CollisionRadius=5.0),NextLocomotionMode=ELocomotionMode.LM_Grabbed,AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[64]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,IgnorePawnCollisions=true))
    SpecialMoveParams[65]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,DisableCollisions=true))
    SpecialMoveParams[66]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,IgnorePawnCollisions=true,CollisionHeight=35.0,CollisionRadius=5.0),AdjustPosition=true)
    SpecialMoveParams[67]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_Limited,MinPitchCS=0.0,MaxPitchCS=0.0,IgnorePawnCollisions=true,CollisionRadius=5.0))
    SpecialMoveParams[68]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated),NextLocomotionMode=ELocomotionMode.LM_Cinematic)
    SpecialMoveParams[69]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated,MinPitchWS=-90.0,MaxPitchWS=90.0),AdjustPosition=true,AdjustOrientation=true)
    SpecialMoveParams[70]=(GP=(RMM=ERootMotionMode.RMM_Accel,CameraMode=CameraRotationMode.CRM_FullyAnimated))
    LightEnvironment=DynamicLightEnvironmentComponent'Default__OLHero.MyLightEnvironment'
    HeadBoneName=Hero-Head
    DefaultAirControl=0.0
    PawnAmbientSound=AudioComponent'Default__OLHero.AmbientSoundComponent'
    MaxStepHeight=30.0
    MaxJumpHeight=110.0
    CrouchHeight=37.50
    AirControl=0.0
    CrouchedPct=1.0
    begin object name=WPawnSkeletalMeshComponent class=SkeletalMeshComponent
        // Object Offset:0x03B7DEA3
        SkeletalMesh=SkeletalMesh'02_Player.Pawn.Miles_beheaded'
        AnimTreeTemplate=AnimTree'02_Behaviors.Player.Player_AnimTree'
        PhysicsAsset=PhysicsAsset'02_Player.Pawn.Player_Physics'
        AnimSets(0)=AnimSet'03_Hero.Hero-01_AS'
        AnimSets(1)=AnimSet'03_OL_ScriptedEvents.Hero_SE'
        MinDistFactorForKinematicUpdate=0.20
        bIgnoreControllersWhenNotRendered=true
        bHasPhysicsAssetInstance=true
        bPerBoneMotionBlur=true
        bOverrideAttachmentOwnerVisibility=true
        bChartDistanceFactor=true
        bCacheAnimSequenceNodes=false
        ReplacementPrimitive=none
        LightEnvironment=DynamicLightEnvironmentComponent'Default__OLHero.MyLightEnvironment'
        RBChannel=ERBCollisionChannel.RBCC_Pawn
        RBDominanceGroup=5
        bSelfShadowOnly=true
        bUseOnePassLightingOnTranslucency=true
        BlockRigidBody=true
        LightingChannels=(bInitialized=true,Dynamic=true,Skybox=true,Unnamed_1=true,Unnamed_2=true,Unnamed_3=true,Unnamed_4=true,Unnamed_5=true,Unnamed_6=true,Cinematic_1=true,Cinematic_2=true,Cinematic_3=true,Cinematic_4=true,Cinematic_5=true,Dynamic_1=true,Dynamic_2=true,Dynamic_3=true,Dynamic_4=true,Dynamic_5=true,Gameplay_1=true,Gameplay_2=true,Gameplay_3=true,Gameplay_4=true)
        RBCollideWithChannels=(Default=true,Pawn=true,GameplayPhysics=true,Untitled3=true,BlockingVolume=true)
    End Object
    // Reference: SkeletalMeshComponent'Default__OLHero.WPawnSkeletalMeshComponent'
    Mesh=WPawnSkeletalMeshComponent
    // Reference: CylinderComponent'Default__OLHero.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    ViewPitchMin=-13800.0
    ViewPitchMax=10000.0
    Components(0)=none
    begin object name=CollisionCylinder
        // Object Offset:0x03457BBB
        ReplacementPrimitive=none
    End Object
    // Reference: CylinderComponent'Default__OLHero.CollisionCylinder'
    Components(1)=CollisionCylinder
    Components(2)=none
    Components(3)=DynamicLightEnvironmentComponent'Default__OLHero.MyLightEnvironment'
    Components(4)=AudioComponent'Default__OLHero.AmbientSoundComponent'
    // Reference: SkeletalMeshComponent'Default__OLHero.WPawnSkeletalMeshComponent'
    Components(5)=WPawnSkeletalMeshComponent
    // Reference: SkeletalMeshComponent'Default__OLHero.ShadowProxyComponent'
    Components(6)=ShadowProxyComponent
    // Reference: StaticMeshComponent'Default__OLHero.HeadMeshComp'
    Components(7)=HeadMeshComp
    // Reference: SpotLightComponent'Default__OLHero.NVLightComponent'
    Components(8)=NVLightComponent
    // Reference: SpotLightComponent'Default__OLHero.NVLightNoBatteriesComponent'
    Components(9)=NVLightNoBatteriesComponent
    // Reference: SpotLightComponent'Default__OLHero.DarkLightComponent'
    Components(10)=DarkLightComponent
    // Reference: PointLightComponent'Default__OLHero.CamcorderScreenLightComp'
    Components(11)=CamcorderScreenLightComp
    // Reference: ParticleSystemComponent'Default__OLHero.RainEffectComponent'
    Components(12)=RainEffectComponent
    // Reference: ParticleLightEnvironmentComponent'Default__OLHero.FootstepsLightEnvironment'
    Components(13)=FootstepsLightEnvironment
    // Reference: CylinderComponent'Default__OLHero.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}