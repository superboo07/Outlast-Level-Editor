/*******************************************************************************
 * OLEngine generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2021 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OLEngine extends GameEngine
    transient
    native
    config(Engine);

enum ECheckpointAction
{
    Checkpoint_Default,
    Checkpoint_Load,
    Checkpoint_SaveToDisk,
    Checkpoint_SaveToMemory,
    Checkpoint_MAX
};

enum OrbisDialogType
{
    ODT_None,
    ODT_SelectSaveLocation,
    ODT_LoadGame,
    ODT_SystemError,
    ODT_LoadedBadCheckpoint,
    ODT_PSStore,
    ODT_MAX
};

struct native CheckpointTime
{
    var int SecondsSinceMidnight;
    var int Day;
    var int Month;
    var int Year;

    structdefaultproperties
    {
        // Object Offset:0x001B93EC
        SecondsSinceMidnight=0
        Day=0
        Month=0
        Year=0
    }
};

struct native SaveFileInfo
{
    var string Filename;
    var name CheckpointName;
    var CheckpointTime Time;

    structdefaultproperties
    {
        // Object Offset:0x001D164B
        Filename=""
        CheckpointName=None
        Time=(SecondsSinceMidnight=0,Day=0,Month=0,Year=0)
    }
};

var array<SaveFileInfo> SaveFiles;
var name PendingCheckpointName;
var OLEngine.ECheckpointAction PendingCheckpointAction;
var OLEngine.OrbisDialogType ActiveOrbisDialog;
var bool bRestartingActiveCheckpoint;
var bool bPendingGraphicalSettingsChange;
var config bool bDisableMotionBlur;
var bool bPausedForSystemDialog;
var int PendingNewLanguage;
var float NextRefreshDLCTime;
var array<byte> SaveDataBuffer;

event RestartPlayer(OLPlayerController OLPC)
{
}

// Export UOLEngine::execCheckReloadForDLC(FFrame&, void* const)
native function bool CheckReloadForDLC();

// Export UOLEngine::execRefreshDLC(FFrame&, void* const)
native function bool RefreshDLC();

// Export UOLEngine::execShouldShowNewDLCGame(FFrame&, void* const)
native function bool ShouldShowNewDLCGame();

// Export UOLEngine::execTryStartDLCGame(FFrame&, void* const)
native function bool TryStartDLCGame();

// Export UOLEngine::execUsingFixedSaveLocation(FFrame&, void* const)
native function bool UsingFixedSaveLocation();

delegate SaveDataDialogDoneCallback(bool bSuccess);

event FinishedSaveDataDialog(bool bSuccess)
{
}

// Export UOLEngine::execNativeSelectSaveLocation(FFrame&, void* const)
native function NativeSelectSaveLocation(string startCP);

function SelectSaveLocation(string startCP, delegate<SaveDataDialogDoneCallback> Callback)
{
}

// Export UOLEngine::execNativeSelectAndLoadGame(FFrame&, void* const)
native function NativeSelectAndLoadGame();

function SelectAndLoadGame(delegate<SaveDataDialogDoneCallback> Callback)
{
}

// Export UOLEngine::execStartCurrentCheckpoint(FFrame&, void* const)
native function StartCurrentCheckpoint();

// Export UOLEngine::execSaveCheckpoint(FFrame&, void* const)
native function SaveCheckpoint(name CheckpointName, bool bSaveToDisk);

// Export UOLEngine::execSaveCheckpointImmediate(FFrame&, void* const)
native function SaveCheckpointImmediate(name CheckpointName);

// Export UOLEngine::execSaveAllCheckpoints(FFrame&, void* const)
native function SaveAllCheckpoints();

// Export UOLEngine::execHasValidSaveGame(FFrame&, void* const)
native function bool HasValidSaveGame();

// Export UOLEngine::execDebugSaveGame(FFrame&, void* const)
native function DebugSaveGame(string Filename);

// Export UOLEngine::execDebugLoadGame(FFrame&, void* const)
native function DebugLoadGame(string Filename);

// Export UOLEngine::execLoadSaveFile(FFrame&, void* const)
native function bool LoadSaveFile(string Filename);

// Export UOLEngine::execDeleteSaveFile(FFrame&, void* const)
native function DeleteSaveFile(string Filename);

// Export UOLEngine::execRefreshSaveFiles(FFrame&, void* const)
native function RefreshSaveFiles();

// Export UOLEngine::execLoadCurrentSaveFile(FFrame&, void* const)
native function bool LoadCurrentSaveFile();

// Export UOLEngine::execLoadMostRecentSaveFile(FFrame&, void* const)
native function bool LoadMostRecentSaveFile();

// Export UOLEngine::execApplySystemSettings(FFrame&, void* const)
native function bool ApplySystemSettings(OLProfileSettings ProfileSettings);

// Export UOLEngine::execApplyKeyBindings(FFrame&, void* const)
native function bool ApplyKeyBindings(OLProfileSettings ProfileSettings);

// Export UOLEngine::execUpdateProfileFromSystemSettings(FFrame&, void* const)
native function bool UpdateProfileFromSystemSettings(OLProfileSettings ProfileSettings);

// Export UOLEngine::execUpdateProfileKeyBindingsFromSystem(FFrame&, void* const)
native function bool UpdateProfileKeyBindingsFromSystem(OLProfileSettings ProfileSettings);

defaultproperties
{
    // Object Offset:0x001D27A3
    PendingNewLanguage=-1
    StartupMovieSound=AkEvent'Intro_Logo.SFX_Logo_intro'
    DownloadableContentManagerClassName="OLGame.OLDLCManager"
}