/*******************************************************************************
 * OLHeroCamera generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2021 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OLHeroCamera extends Object
    native
    config(Game);

struct native CamView
{
    var Vector Loc;
    var float Yaw;
    var float Pitch;
    var float Roll;

    structdefaultproperties
    {
        // Object Offset:0x001D822B
        Loc=(X=0.0,Y=0.0,Z=0.0)
        Yaw=0.0
        Pitch=0.0
        Roll=0.0
    }
};

struct native ViewLimits
{
    var float MinYaw;
    var float MaxYaw;
    var float MinPitch;
    var float MaxPitch;

    structdefaultproperties
    {
        // Object Offset:0x001D8387
        MinYaw=0.0
        MaxYaw=0.0
        MinPitch=0.0
        MaxPitch=0.0
    }
};

struct native SmoothingData
{
    var bool bActive;
    var CamView ViewWS;
    var float StartTime;
    var float Duration;

    structdefaultproperties
    {
        // Object Offset:0x001D84D7
        bActive=false
        ViewWS=(Loc=(X=0.0,Y=0.0,Z=0.0),Yaw=0.0,Pitch=0.0,Roll=0.0)
        StartTime=0.0
        Duration=0.0
    }
};

struct native TargettedSmoothingData
{
    var bool bActive;
    var float TargetAngleWS;
    var float StartAngleWS;
    var float StartTime;
    var float Duration;

    structdefaultproperties
    {
        // Object Offset:0x001D86D4
        bActive=false
        TargetAngleWS=0.0
        StartAngleWS=0.0
        StartTime=0.0
        Duration=0.0
    }
};

struct native CameraWaveData
{
    var() float Amplitude;
    var() float Frequency;
    var() float StartPhase;

    structdefaultproperties
    {
        // Object Offset:0x001D8811
        Amplitude=0.0
        Frequency=0.0
        StartPhase=0.0
    }
};

struct native CameraShakeData
{
    var() float Intensity;
    var() float Duration;
    var() float FadeInTime;
    var() float FadeOutTime;
    var() bool bPositionless;
    var() editinline CameraWaveData YawWaveA;
    var() editinline CameraWaveData YawWaveB;
    var() editinline CameraWaveData PitchWaveA;
    var() editinline CameraWaveData PitchWaveB;
    var() editinline CameraWaveData RollWaveA;
    var() editinline CameraWaveData RollWaveB;
    var transient bool bActive;
    var transient float StartedTime;
    var transient Vector SourceLocation;
    var transient float YawOffset;
    var transient float PitchOffset;
    var transient float RollOffset;

    structdefaultproperties
    {
        // Object Offset:0x001D8B65
        Intensity=1.0
        Duration=0.40
        FadeInTime=0.0
        FadeOutTime=0.250
        bPositionless=false
        YawWaveA=(Amplitude=4.0,Frequency=22.0,StartPhase=0.50)
        YawWaveB=(Amplitude=4.0,Frequency=122.0,StartPhase=0.0)
        PitchWaveA=(Amplitude=3.0,Frequency=37.0,StartPhase=0.30)
        PitchWaveB=(Amplitude=2.0,Frequency=90.0,StartPhase=0.0)
        RollWaveA=(Amplitude=2.0,Frequency=20.0,StartPhase=0.0)
        RollWaveB=(Amplitude=0.0,Frequency=0.0,StartPhase=0.0)
        bActive=false
        StartedTime=0.0
        SourceLocation=(X=0.0,Y=0.0,Z=0.0)
        YawOffset=0.0
        PitchOffset=0.0
        RollOffset=0.0
    }
};

var OLHero Hero;
var CamView ViewWS;
var CamView ViewCS;
var ViewLimits Limits;
var ViewLimits SoftLimits;
var float SoftZonePitch;
var float SoftZoneYaw;
var Rotator BaseRotation;
var Vector BaseLocation;
var SmoothingData BaseViewSmoothing;
var float InputYaw;
var float InputPitch;
var float NeckOffsetFwd;
var float NeckOffsetSide;
var float NeckOffsetBaseYaw;
var float LookBackRatio;
var float LeanPushingRatio;
var bool bActiveLookAt;
var bool bUserControlsPawnRotation;
var bool bLocalSpacePlayerControl;
var float PendingYawCorrection;
var TargettedSmoothingData TargettedYawSmoothing;
var CameraShakeData ShakeData;
var const CameraShakeData SmallLandingShakeData;
var ForceFeedbackWaveform CamShakeFFWaveform;
var config name CameraBoneName;
var config float ViewLimitsSoftZone;
var config float SoftZoneStiffness;

defaultproperties
{
    // Object Offset:0x001D8FC7
    ShakeData=(Intensity=1.0,Duration=0.40,FadeInTime=0.0,FadeOutTime=0.250,bPositionless=false,YawWaveA=(Amplitude=4.0,Frequency=22.0,StartPhase=0.50),YawWaveB=(Amplitude=4.0,Frequency=122.0,StartPhase=0.0),PitchWaveA=(Amplitude=3.0,Frequency=37.0,StartPhase=0.30),PitchWaveB=(Amplitude=2.0,Frequency=90.0,StartPhase=0.0),RollWaveA=(Amplitude=2.0,Frequency=20.0,StartPhase=0.0),RollWaveB=(Amplitude=0.0,Frequency=0.0,StartPhase=0.0),bActive=false,StartedTime=0.0,SourceLocation=(X=0.0,Y=0.0,Z=0.0),YawOffset=0.0,PitchOffset=0.0,RollOffset=0.0)
    SmallLandingShakeData=(Intensity=0.50,Duration=0.20,FadeInTime=0.0,FadeOutTime=0.20,bPositionless=true,YawWaveA=(Amplitude=1.0,Frequency=27.0,StartPhase=0.0),YawWaveB=(Amplitude=0.0,Frequency=0.0,StartPhase=0.0),PitchWaveA=(Amplitude=3.0,Frequency=14.0,StartPhase=0.30),PitchWaveB=(Amplitude=2.0,Frequency=87.0,StartPhase=0.0),RollWaveA=(Amplitude=2.250,Frequency=24.0,StartPhase=0.0),RollWaveB=(Amplitude=0.0,Frequency=0.0,StartPhase=0.0),bActive=false,StartedTime=0.0,SourceLocation=(X=0.0,Y=0.0,Z=0.0),YawOffset=0.0,PitchOffset=0.0,RollOffset=0.0)
    begin object name=ForceFeedbackWaveform0 class=ForceFeedbackWaveform
        // Object Offset:0x034AF934
        Samples=/* Array type was not detected. */
    object end
    // Reference: ForceFeedbackWaveform'Default__OLHeroCamera.ForceFeedbackWaveform0'
    CamShakeFFWaveform=ForceFeedbackWaveform0
    CameraBoneName=Hero-Camera
    ViewLimitsSoftZone=20.0
    SoftZoneStiffness=1000.0
}